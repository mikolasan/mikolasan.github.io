{"componentChunkName":"component---src-templates-blog-template-js","path":"/code/bitbucket-101-get-access-token","result":{"data":{"markdownRemark":{"html":"<p>How do I obtain an HTTP access token from to work with BitBucket through API? Here is <a href=\"https://stackoverflow.com/questions/70393902/how-do-i-obtain-an-http-access-token-from-a-bitbucket-repository-on-bitbucket-cl\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">my answer</a></p>\n<h2 id=\"get-access-token\" style=\"position:relative;\">Get access token<a href=\"#get-access-token\" aria-label=\"get access token permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>Atlassian has vast documentation, but I have a problem with it. I had a hard time understanding how to get an access token simply to download archives from private repositories.</p>\n<p>Finally I did it and here's my step by step tutorial.</p>\n<ol>\n<li>Insert your workspace name instead of <code class=\"language-text\">{workspace_name}</code> and go to the following link in order to create an <strong>OAuth consumer</strong></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://bitbucket.org/{workspace_name}/workspace/settings/api</code></pre></div>\n<ul>\n<li>set callback URL to <a href=\"http://localhost:8976\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">http://localhost:8976</a> (doesn't need to be a real server there)</li>\n<li>select permissions: repository -> read</li>\n</ul>\n<ol start=\"2\">\n<li>Use consumer's <strong>Key</strong> as a <code class=\"language-text\">{client_id}</code> and open the following URL in the browser</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://bitbucket.org/site/oauth2/authorize?client_id={client_id}&amp;response_type=code</code></pre></div>\n<ol start=\"3\">\n<li>After you press \"Grant access\" in the browser it will redirect you to</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">http://localhost:8976?code=&lt;CODE></code></pre></div>\n<p>Note: you can spin your local server to automate this step</p>\n<ol start=\"4\">\n<li>Use the code from the previous step and consumer's <strong>Key</strong> as a <code class=\"language-text\">{client_id}</code>, and consumer's <strong>Secret</strong> as <code class=\"language-text\">{client_secret}</code>:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -X POST -u \"{client_id}:{client_secret}\" \\\n  https://bitbucket.org/site/oauth2/access_token \\\n  -d grant_type=authorization_code \\\n  -d code={code} \\</code></pre></div>\n<ol start=\"5\">\n<li>You should receive similar json back</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  \"access_token\": &lt;access_token>,\n  \"scopes\": \"repository\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7200,\n  \"state\": \"authorization_code\",\n  \"refresh_token\": &lt;refresh_token>\n}</code></pre></div>\n<ol start=\"6\">\n<li>Use the access token in the following manner</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl https://api.bitbucket.org/2.0/repositories/{workspace_name} \\\n--header \"Authorization: Bearer {access_token}</code></pre></div>\n<h2 id=\"example\" style=\"position:relative;\">Example<a href=\"#example\" aria-label=\"example permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>I wrote a \"package manager\" for myself. This script downloads archived git repositories from BitBucket. First I request access token and start a local web server where after user's authentication an authorization code will be automatically retrieved and used to get the access token. BitBucket credentials are stored in the <code class=\"language-text\">.env</code> file</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">\"\"\"\nhttps://support.atlassian.com/bitbucket-cloud/docs/oauth-consumer-examples/\n\nOAuth consumer examples: Python using rauth library\n\npip install rauth\npip install python-dotenv\npip install fastapi\npip install \"uvicorn[standard]\"\n\"\"\"</span>\n\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">from</span> dotenv <span class=\"token keyword\">import</span> load_dotenv\n<span class=\"token keyword\">from</span> fastapi <span class=\"token keyword\">import</span> FastAPI\n<span class=\"token keyword\">from</span> fastapi<span class=\"token punctuation\">.</span>responses <span class=\"token keyword\">import</span> HTMLResponse\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> rauth <span class=\"token keyword\">import</span> OAuth2Service<span class=\"token punctuation\">,</span> OAuth2Session\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> uvicorn\n\nparser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>description<span class=\"token operator\">=</span><span class=\"token string\">'N Package Manager'</span><span class=\"token punctuation\">)</span>\nparser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'modules'</span><span class=\"token punctuation\">,</span> metavar<span class=\"token operator\">=</span><span class=\"token string\">'MODULES'</span><span class=\"token punctuation\">,</span> nargs<span class=\"token operator\">=</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'list of modules to download'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># web server</span>\napp <span class=\"token operator\">=</span> FastAPI<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># read .env</span>\nload_dotenv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># globals</span>\nloop <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\nstop <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nserver <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\nauthorize_code <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\nworkspace <span class=\"token operator\">=</span> <span class=\"token string\">'JumboSkill'</span>\nPACKAGE_MANAGER_CACHE <span class=\"token operator\">=</span> <span class=\"token string\">'.package_manager_cache'</span>\n\n<span class=\"token comment\"># Create a new consumer at https://bitbucket.org/account/user/{username}/api</span>\nCONSUMER_KEY <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'BITBUCKET_CONSUMER_KEY'</span><span class=\"token punctuation\">)</span>\nCONSUMER_SECRET <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'BITBUCKET_CONSUMER_SECRET'</span><span class=\"token punctuation\">)</span>\nCONSUMER_REDIRECT_URL <span class=\"token operator\">=</span> <span class=\"token string\">'http://localhost:8967'</span>\nPORT <span class=\"token operator\">=</span> <span class=\"token number\">8967</span>\nTEST_SESSION_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.bitbucket.org/2.0/repositories/{workspace}\"</span>\nDOWNLOADS_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.bitbucket.org/2.0/repositories/{workspace}/{repo_slug}/downloads\"</span>\nDOWNLOAD_MASTER_BRANCH_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://bitbucket.org/{workspace}/{repo_slug}/get/master.tar.gz\"</span>\nDOWNLOAD_TAG_URL <span class=\"token operator\">=</span> <span class=\"token string\">\"https://bitbucket.org/{workspace}/{repo_slug}/get/{tag}.tar.gz\"</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_service_wrapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># API URLs from </span>\n    <span class=\"token comment\"># https://support.atlassian.com/bitbucket-cloud/docs/use-oauth-on-bitbucket-cloud/</span>\n    <span class=\"token comment\"># https://developer.atlassian.com/cloud/bitbucket/rest/intro/</span>\n    AUTHORIZE_URL <span class=\"token operator\">=</span> <span class=\"token string\">'https://bitbucket.org/site/oauth2/authorize'</span>\n    ACCESS_TOKEN_URL <span class=\"token operator\">=</span> <span class=\"token string\">'https://bitbucket.org/site/oauth2/access_token'</span>\n    BASE_URL <span class=\"token operator\">=</span> <span class=\"token string\">'https://bitbucket.org/site/'</span>\n\n    <span class=\"token comment\"># create the service wrapper</span>\n    bitbucket <span class=\"token operator\">=</span> OAuth2Service<span class=\"token punctuation\">(</span>\n        client_id<span class=\"token operator\">=</span>CONSUMER_KEY<span class=\"token punctuation\">,</span>\n        client_secret<span class=\"token operator\">=</span>CONSUMER_SECRET<span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">=</span><span class=\"token string\">'bitbucket'</span><span class=\"token punctuation\">,</span>\n        authorize_url<span class=\"token operator\">=</span>AUTHORIZE_URL<span class=\"token punctuation\">,</span>\n        access_token_url<span class=\"token operator\">=</span>ACCESS_TOKEN_URL<span class=\"token punctuation\">,</span>\n        base_url<span class=\"token operator\">=</span>BASE_URL<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> bitbucket\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_cache</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    access_token <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span>PACKAGE_MANAGER_CACHE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>PACKAGE_MANAGER_CACHE<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">[</span>access_token<span class=\"token punctuation\">,</span> refresh_token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                access_token <span class=\"token operator\">=</span> access_token<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                refresh_token <span class=\"token operator\">=</span> refresh_token<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                access_token <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">,</span> access_token\n            \n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Restored tokens'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Access token: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>access_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Refresh token: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>refresh_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n            session <span class=\"token operator\">=</span> restore_session<span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> access_token<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># test session</span>\n            test_url <span class=\"token operator\">=</span> TEST_SESSION_URL<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'{workspace}'</span><span class=\"token punctuation\">,</span> workspace<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                r <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Restored session test status code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>r<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> r<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">:</span>\n                    session <span class=\"token operator\">=</span> refresh_session<span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">,</span> refresh_token<span class=\"token punctuation\">)</span>\n                    r <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>test_url<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Refreshed session test status code: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>r<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> r<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">:</span>\n                        access_token <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                        session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n                access_token <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                session <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n                <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">,</span> access_token\n    <span class=\"token keyword\">return</span> session<span class=\"token punctuation\">,</span> access_token\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">authenticate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Visit the following link to authenticate me'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'  https://bitbucket.org/site/oauth2/authorize?client_id=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>CONSUMER_KEY<span class=\"token punctuation\">}</span></span><span class=\"token string\">&amp;response_type=code'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">start_new_session</span><span class=\"token punctuation\">(</span>bitbucket<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> authorize_code\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'grant_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'authorization_code'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'code'</span><span class=\"token punctuation\">:</span> authorize_code<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    authorize_code <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    access_token_response <span class=\"token operator\">=</span> bitbucket<span class=\"token punctuation\">.</span>get_raw_access_token<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n    response_data <span class=\"token operator\">=</span> access_token_response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    access_token <span class=\"token operator\">=</span> response_data<span class=\"token punctuation\">[</span><span class=\"token string\">'access_token'</span><span class=\"token punctuation\">]</span>\n    refresh_token <span class=\"token operator\">=</span> response_data<span class=\"token punctuation\">[</span><span class=\"token string\">'refresh_token'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Access token: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>access_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Refresh token: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>refresh_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>PACKAGE_MANAGER_CACHE<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>access_token<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> refresh_token<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    session <span class=\"token operator\">=</span> bitbucket<span class=\"token punctuation\">.</span>get_session<span class=\"token punctuation\">(</span>access_token<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> session\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">refresh_session</span><span class=\"token punctuation\">(</span>bitbucket<span class=\"token punctuation\">,</span> refresh_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'grant_type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'refresh_token'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'refresh_token'</span><span class=\"token punctuation\">:</span> refresh_token<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    session <span class=\"token operator\">=</span> bitbucket<span class=\"token punctuation\">.</span>get_auth_session<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> decoder<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> session\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">restore_session</span><span class=\"token punctuation\">(</span>bitbucket<span class=\"token punctuation\">,</span> access_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    session <span class=\"token operator\">=</span> OAuth2Session<span class=\"token punctuation\">(</span>\n        client_id<span class=\"token operator\">=</span>CONSUMER_KEY<span class=\"token punctuation\">,</span>\n        client_secret<span class=\"token operator\">=</span>CONSUMER_SECRET<span class=\"token punctuation\">,</span>\n        access_token<span class=\"token operator\">=</span>access_token<span class=\"token punctuation\">,</span>\n        service<span class=\"token operator\">=</span>bitbucket<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> session\n    \n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> response_class<span class=\"token operator\">=</span>HTMLResponse<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">read_root</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Received code </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">global</span> authorize_code\n    authorize_code <span class=\"token operator\">=</span> code\n    <span class=\"token keyword\">return</span> <span class=\"token triple-quoted-string string\">\"\"\"\n    &lt;html>\n        &lt;head>\n            &lt;title>N Package Manager&lt;/title>\n        &lt;/head>\n        &lt;body>\n            &lt;h1>Access granted!&lt;/h1>\n            &lt;p>Code has been received, now you can close this window&lt;/p>\n        &lt;/body>\n    &lt;/html>\n    \"\"\"</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">check_for_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> stop<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> authorize_code <span class=\"token operator\">!=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">start_web_server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    config <span class=\"token operator\">=</span> uvicorn<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span>PORT<span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">global</span> server\n    server <span class=\"token operator\">=</span> uvicorn<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span>serve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">stop_web_server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> server<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span>shutdown<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">download_archive</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> workspace<span class=\"token punctuation\">,</span> repo_slug<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DOWNLOAD_MASTER_BRANCH_URL\n           <span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'{workspace}'</span><span class=\"token punctuation\">,</span> workspace<span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'{repo_slug}'</span><span class=\"token punctuation\">,</span> repo_slug<span class=\"token punctuation\">)</span>\n           <span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'{tag}'</span><span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Download URL: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">with</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> stream<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> r<span class=\"token punctuation\">:</span>\n        r<span class=\"token punctuation\">.</span>raise_for_status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        output_path <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>repo_slug<span class=\"token punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tag<span class=\"token punctuation\">}</span></span><span class=\"token string\">.tar.gz'</span></span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>output_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> chunk <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>iter_content<span class=\"token punctuation\">(</span>chunk_size<span class=\"token operator\">=</span><span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Archive saved!'</span><span class=\"token punctuation\">)</span>\n            \n            \n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">package_manager</span><span class=\"token punctuation\">(</span>modules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Welcome to N Package Manager!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    \n    wrapper <span class=\"token operator\">=</span> create_service_wrapper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    session<span class=\"token punctuation\">,</span> access_token <span class=\"token operator\">=</span> read_cache<span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> access_token<span class=\"token punctuation\">:</span>\n        start_web_server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        authenticate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> check_for_code<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> stop_web_server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        session <span class=\"token operator\">=</span> start_new_session<span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> module <span class=\"token keyword\">in</span> modules<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Download module </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>module<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n        repo_slug <span class=\"token operator\">=</span> module\n        tag <span class=\"token operator\">=</span> <span class=\"token string\">'rev1'</span>\n        download_archive<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> workspace<span class=\"token punctuation\">,</span> repo_slug<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span>\n\n    \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">:</span>\n        loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>package_manager<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">.</span>shutdown_asyncgens<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Keyboard interrupt'</span><span class=\"token punctuation\">)</span>\n            stop <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n            loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No modules specified.'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h2 id=\"reference\" style=\"position:relative;\">Reference<a href=\"#reference\" aria-label=\"reference permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li><a href=\"https://support.atlassian.com/bitbucket-cloud/docs/use-oauth-on-bitbucket-cloud/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://support.atlassian.com/bitbucket-cloud/docs/use-oauth-on-bitbucket-cloud/</a></li>\n<li><a href=\"https://developer.atlassian.com/cloud/bitbucket/rest/intro/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://developer.atlassian.com/cloud/bitbucket/rest/intro/</a></li>\n<li><a href=\"https://developer.atlassian.com/cloud/bitbucket/rest/api-group-downloads/?utm_source=%2Fbitbucket%2Fapi%2F2%2Freference%2Fresource%2Frepositories%2F%257Bworkspace%257D%2F%257Brepo_slug%257D%2Fdownloads&#x26;utm_medium=302#post\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://developer.atlassian.com/cloud/bitbucket/rest/api-group-downloads/?utm_source=%2Fbitbucket%2Fapi%2F2%2Freference%2Fresource%2Frepositories%2F%257Bworkspace%257D%2F%257Brepo_slug%257D%2Fdownloads&#x26;utm_medium=302#post</a></li>\n<li><a href=\"https://bitbucket.org/neupokoev/workspace/settings/api\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://bitbucket.org/neupokoev/workspace/settings/api</a></li>\n<li><a href=\"https://rauth.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://rauth.readthedocs.io/en/latest/</a> (addition to requests)</li>\n<li><a href=\"https://requests.readthedocs.io/en/latest/api/#requests.Response.content\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://requests.readthedocs.io/en/latest/api/#requests.Response.content</a></li>\n<li><a href=\"https://stackoverflow.com/questions/47169474/parallel-asynchronous-io-in-pythons-coroutines\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://stackoverflow.com/questions/47169474/parallel-asynchronous-io-in-pythons-coroutines</a></li>\n<li><a href=\"https://docs.python.org/3/library/asyncio-task.html#asyncio.run\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://docs.python.org/3/library/asyncio-task.html#asyncio.run</a></li>\n</ul>","excerpt":"How do I obtain an HTTP access token from to work with BitBucket through API? Here is my answer Get access token Atlassian has vast…","tableOfContents":"<ul>\n<li><a href=\"#get-access-token\">Get access token</a></li>\n<li><a href=\"#example\">Example</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/f2c3d3ac-e79f-52dd-b627-301fe574104f.jpg"},"frontmatter":{"date":"July 21, 2022","published":"July 22, 2022","lastModified":"July 22, 2022","title":"BitBucket 101 - access token","subtitle":"Get access token","section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/bitbucket-101-get-access-token.md","url":"/code/bitbucket-101-get-access-token","next":{"excerpt":"Simple generators A quick tutorial on how to make generators. We want to achieve this simple behavior and the same output: Define a function…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/generators-in-python.md","frontmatter":{"title":"Generators in Python","date":"2022-07-31T00:00:00.000Z","topic":null,"article":null},"id":"d74871b0-ed16-55b1-8608-0417cee4d702"},"previous":{"excerpt":"Writing your own file system is not that scary as you may think. It's just a way of organizing chunks of storage on the big piece of storage…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/little-filesystems.md","frontmatter":{"title":"Little file systems","date":"2022-07-13T00:00:00.000Z","topic":null,"article":null},"id":"7b4818b9-6591-5eb2-97b0-d83bf057c09b"},"recentArticles":[{"excerpt":"Then here is the list of alternatives Intel-IPP Links: https://software.intel.com/en-us/intel-ipp , https://github.com/intel/ipp-crypto…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/if-you-hate-openssl.md","frontmatter":{"title":"If you hate OpenSSL","date":"2024-05-10T00:00:00.000Z","topic":null,"article":null},"id":"0c36d8cc-31d2-582b-9929-51cf8bed8920"},{"excerpt":"cool thing for the background (play it together with egzod - royalty) nice globe  Cool WebGL examples (no code, sad)","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/webgl.md","frontmatter":{"title":"WebGL","date":"2023-07-17T00:00:00.000Z","topic":null,"article":null},"id":"1bbe4c4e-2cc1-5fec-a2ca-b8cefdbfc6ee"},{"excerpt":"Check that you have ESLint extension installed. (Optional) While you are playing with linters and VS Code extensions, you can think about a…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/eslint-for-gatsby-howto.md","frontmatter":{"title":"ESLint in VS Code for Gatsby 5 blog","date":"2023-05-29T00:00:00.000Z","topic":null,"article":null},"id":"5953c80a-01e6-56c1-985e-bb9c0b1f340b"},{"excerpt":"The reason behind \"connect, disconnect and then connect again\" behavior might be that the old socket was still listening because it was half…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/how-to-close-tcp-socket-in-nodejs.md","frontmatter":{"title":"How to close TCP socket in Node.js","date":"2023-02-02T00:00:00.000Z","topic":null,"article":null},"id":"e7b7740f-e7b4-565f-a843-05bf8c27fda3"},{"excerpt":"When does verification happen? From this wiki it seems like the get function does it. What security level to use? https://www.openssl.org…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/ssl-tls-client-socket-with-openssl.md","frontmatter":{"title":"SSL/TLS client socket with OpenSSL","date":"2023-01-26T00:00:00.000Z","topic":null,"article":null},"id":"1f2b456a-3ea6-5863-a966-8579f11b39bd"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}