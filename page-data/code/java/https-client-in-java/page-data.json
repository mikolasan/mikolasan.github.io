{"componentChunkName":"component---src-templates-blog-template-js","path":"/code/java/https-client-in-java","result":{"data":{"markdownRemark":{"html":"<p>Consider you have a HTTPS server with ssl certificate, and you do want to use the certificate on your client side.\nHow to write HTTPS client in <a href=\"/blog/why-do-i-hate-java\">Java</a>?</p>\n<p>Normally for HTTPS connections <strong>One way SSL server authentication</strong> is used when the client has CA certificate from the server and it's enough to verify the server and to establish secure connection.</p>\n<p>SSL context  must have a file with certificate loaded either using <a href=\"https://docs.oracle.com/javase/7/docs/api/javax/net/ssl/TrustManagerFactory.html#init(java.security.KeyStore)\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">pure java libraries</a> or Apache httpclient. See more examples in <a href=\"https://stackoverflow.com/questions/2893819/accept-servers-self-signed-ssl-certificate-in-java-client\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">SO answers</a>.</p>\n<p>As a test server I'm going to use simple HTTPS server in <a href=\"/blog/why-do-i-hate-python\">Python</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> http<span class=\"token punctuation\">.</span>server <span class=\"token keyword\">import</span> HTTPServer<span class=\"token punctuation\">,</span> BaseHTTPRequestHandler<span class=\"token punctuation\">,</span> SimpleHTTPRequestHandler\n<span class=\"token keyword\">import</span> ssl\n\nhttpd <span class=\"token operator\">=</span> HTTPServer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> SimpleHTTPRequestHandler<span class=\"token punctuation\">)</span>\nhttpd<span class=\"token punctuation\">.</span>socket <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>wrap_socket<span class=\"token punctuation\">(</span>httpd<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">,</span> certfile<span class=\"token operator\">=</span><span class=\"token string\">'./server.pem'</span><span class=\"token punctuation\">,</span> server_side<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nhttpd<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note that if you run the client with any other https server or with other certificate, then you will get this error:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</code></pre></div>\n<p>So here it is, implementation in pure java approach, no external libraries. Just minimal functionality.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>naming<span class=\"token punctuation\">.</span>ldap<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LdapName</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span>ssl<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpURLConnection</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketTimeoutException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">URL</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">KeyStore</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>cert<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Certificate</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>cert<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CertificateFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>cert<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">X509Certificate</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CaCertHttpsClient</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">SSLSocketFactory</span> sslSocketFactory <span class=\"token operator\">=</span> <span class=\"token function\">initSSLSocketFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">HostnameVerifier</span> hostnameVerifier <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GrumpyHostnameVerifier</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"https://localhost/\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">LOGIN</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">SEND_TIMEOUT</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// milliseconds</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> <span class=\"token constant\">RESPONSE_TIMEOUT</span> <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// milliseconds</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">HttpURLConnection</span> http <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            http <span class=\"token operator\">=</span> <span class=\"token function\">createHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOGIN</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">SEND_TIMEOUT</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">RESPONSE_TIMEOUT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            http<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketTimeoutException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Timeout.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Connect successful\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>http <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                http<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">HttpURLConnection</span> <span class=\"token function\">createHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> procedure<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> connectTimeout<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> readTimeout<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">URL</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BASE_URL</span> <span class=\"token operator\">+</span> procedure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">HttpsURLConnection</span> https <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpsURLConnection</span><span class=\"token punctuation\">)</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setSSLSocketFactory</span><span class=\"token punctuation\">(</span>sslSocketFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setHostnameVerifier</span><span class=\"token punctuation\">(</span>hostnameVerifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span>connectTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// timeout before the connection can be established</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setReadTimeout</span><span class=\"token punctuation\">(</span>readTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// timeout before there is data available for read</span>\n        https<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Setting the doOutput flag to true indicates that the application intends to write data to the URL connection</span>\n        <span class=\"token keyword\">return</span> https<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n        During handshaking, if the URL's hostname and the server's identification hostname mismatch, the verification\n        mechanism can call back to implementers of this interface to determine if this connection should be allowed.\n\n        These callbacks are used when the default rules for URL hostname verification fail.\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GrumpyHostnameVerifier</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HostnameVerifier</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hostname<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SSLSession</span> session<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">Certificate</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> certificates <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getPeerCertificates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// TODO: what if there are more than one certificate ?!</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>certificates<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>certificates<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">X509Certificate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token class-name\">X509Certificate</span> certificate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">X509Certificate</span><span class=\"token punctuation\">)</span> certificates<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">String</span> dn <span class=\"token operator\">=</span> certificate<span class=\"token punctuation\">.</span><span class=\"token function\">getSubjectX500Principal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">String</span> commonName <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LdapName</span><span class=\"token punctuation\">(</span>dn<span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">getRdns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>rdn <span class=\"token operator\">-></span>\n                                        rdn<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equalsIgnoreCase</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">findFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Certificate is signed for '\"</span> <span class=\"token operator\">+</span> commonName <span class=\"token operator\">+</span> <span class=\"token string\">\"', but real hostname is '\"</span> <span class=\"token operator\">+</span> hostname <span class=\"token operator\">+</span> <span class=\"token string\">\"'. Be aware of possible MITM attack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SSLSocketFactory</span> <span class=\"token function\">initSSLSocketFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">InputStream</span> stream <span class=\"token operator\">=</span> <span class=\"token class-name\">End2EndClient</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ca.crt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Certificate</span> certificate <span class=\"token operator\">=</span> <span class=\"token class-name\">CertificateFactory</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"X.509\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">generateCertificate</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">KeyStore</span> keyStore <span class=\"token operator\">=</span> <span class=\"token class-name\">KeyStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">KeyStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            keyStore<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            keyStore<span class=\"token punctuation\">.</span><span class=\"token function\">setCertificateEntry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mikolasan\"</span><span class=\"token punctuation\">,</span> certificate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">TrustManagerFactory</span> trustManagerFactory <span class=\"token operator\">=</span> <span class=\"token class-name\">TrustManagerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TrustManagerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultAlgorithm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            trustManagerFactory<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>keyStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">SSLContext</span> sslContext <span class=\"token operator\">=</span> <span class=\"token class-name\">SSLContext</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TLSv1.2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sslContext<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> trustManagerFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getTrustManagers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> sslContext<span class=\"token punctuation\">.</span><span class=\"token function\">getSocketFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"references\" style=\"position:relative;\">References<a href=\"#references\" aria-label=\"references permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li>You can find minimal working example on GitHub: <a href=\"https://github.com/mikolasan/java-https-client-example\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://github.com/mikolasan/java-https-client-example</a></li>\n<li>Code above is based on this <a href=\"https://stackoverflow.com/a/57046889/1104612\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">SO answer</a></li>\n<li><a href=\"https://stackoverflow.com/questions/2893819/accept-servers-self-signed-ssl-certificate-in-java-client\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">SO: Accept server's self-signed ssl certificate in Java client</a></li>\n<li><a href=\"https://stackoverflow.com/questions/1666052/java-https-client-certificate-authentication\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">SO: Java HTTPS client certificate authentication</a></li>\n</ul>","excerpt":"Consider you have a HTTPS server with ssl certificate, and you do want to use the certificate on your client side.\nHow to write HTTPS client…","tableOfContents":"<ul>\n<li><a href=\"#references\">References</a></li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/e8c1885b-97e2-5454-b7bc-ce75b26077e4.jpg"},"frontmatter":{"date":"April 20, 2021","published":"October 14, 2021","lastModified":"July 31, 2022","title":"Add CA certificate to Java HTTPS client","subtitle":null,"section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/https-client-in-java.md","url":"/code/java/https-client-in-java","next":{"excerpt":"api_c_wrap.c MyLibraryJNI.java MyLibrary.java Reference https://stackoverflow.com/questions/9630134/jni-how-to-callback-from-c-or-c-to-java…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/callback-from-c-to-java-method.md","frontmatter":{"title":"Callback from C to Java method","date":"2021-06-13T00:00:00.000Z","topic":null,"article":null},"id":"44fcef1b-519d-5727-b79e-729d45558283"},"previous":null,"recentArticles":[{"excerpt":"Java TCP Server Socket with certificate and private key (TLS). Let's delve into the specifics of how to use Java's built-in security…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/java-tcp-secure-server-socket.md","frontmatter":{"title":"Java TCP secure server socket","date":"2022-01-01T00:00:00.000Z","topic":null,"article":null},"id":"459515db-ec6c-5fb1-ad78-d64943c21d57"},{"excerpt":"Gradle snippet: build.gradle Add to your code (where the Test class is your code): Test.java Log levels From the manual: trace error warn…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/add-simple-logger-to-java-app.md","frontmatter":{"title":"Add simple logger","date":"2021-11-23T00:00:00.000Z","topic":null,"article":null},"id":"f8bcc269-8a0c-55db-ab38-9feb92ce11b4"},{"excerpt":"PF4J OSGI Custom (+ jar loading)","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/plugin-system-in-java.md","frontmatter":{"title":"Plugin system in Java","date":"2021-11-23T00:00:00.000Z","topic":null,"article":null},"id":"8e57dac5-14de-5777-b20c-e0d429ac1368"},{"excerpt":"api_c_wrap.c MyLibraryJNI.java MyLibrary.java Reference https://stackoverflow.com/questions/9630134/jni-how-to-callback-from-c-or-c-to-java…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/callback-from-c-to-java-method.md","frontmatter":{"title":"Callback from C to Java method","date":"2021-06-13T00:00:00.000Z","topic":null,"article":null},"id":"44fcef1b-519d-5727-b79e-729d45558283"},{"excerpt":"Consider you have a HTTPS server with ssl certificate, and you do want to use the certificate on your client side.\nHow to write HTTPS client…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/java/https-client-in-java.md","frontmatter":{"title":"Add CA certificate to Java HTTPS client","date":"2021-04-20T00:00:00.000Z","topic":null,"article":null},"id":"e8c1885b-97e2-5454-b7bc-ce75b26077e4"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}