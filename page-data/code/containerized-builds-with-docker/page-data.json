{"componentChunkName":"component---src-templates-blog-template-js","path":"/code/containerized-builds-with-docker","result":{"data":{"markdownRemark":{"html":"<p><i>Photo by <a href=\"https://unsplash.com/@rozetsky?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Ant Rozetsky</a> on <a href=\"https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a></i></p>\n<h1 id=\"why-it-happens\" style=\"position:relative;\">Why it happens<a href=\"#why-it-happens\" aria-label=\"why it happens permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>On my personal workstation I use Manjaro, which is a version of Arch with a nice installer and less frequent updates, which is also nice. But for production we need to deploy to Debian or Ubuntu of specific version.</p>\n<p>So here is why I like Manjaro/Arch: I can use cutting edge technologies without a hassle of searching for newer package versions in untrusted/outdated PPA or building from sources by myself - there's such thing as AUR where with a high chance you can find any library/tool that you are looking for.</p>\n<p>You might say</p>\n<blockquote>\n<p>If you are not using the same Linux distribution in development and in production, then you introduce additional work to yourself. Stop dreaming about GCC 12, install Ubuntu whatever version you need for production and case is closed.</p>\n</blockquote>\n<p>Maybe I would follow this recommendation if I would not be so proficient with docker. In fact I just force my internal lazy developer to follow best practices of CI/CD. And here's how.</p>\n<p>When I create a docker file I unknowingly create documentation on how to build my app. I create instructions that will work on any machine that can run docker. And it's true while docker has Ubuntu version that I'm targeting for. In another words my app will build without errors no matter what sequel of Fast and Furious people are watching in cinema these days.</p>\n<h1 id=\"my-goal\" style=\"position:relative;\">My goal<a href=\"#my-goal\" aria-label=\"my goal permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>Build C++ app written with the new standard (c++20) on Ubuntu 18.04 in 2022</p>\n<h1 id=\"tldr\" style=\"position:relative;\">TL;DR<a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>How to build</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> myapp:master <span class=\"token parameter variable\">-f</span> Dockerfile <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> myapp-sdk\n<span class=\"token function\">docker</span> create <span class=\"token parameter variable\">-ti</span> <span class=\"token parameter variable\">--name</span> myapp-sdk myapp:master\n<span class=\"token function\">docker</span> <span class=\"token function\">cp</span> myapp-sdk:/app/build/myapp ./\n<span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> myapp-sdk</code></pre></div>\n<p><strong>Dockerfile</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> ubuntu:bionic</span>\n\n<span class=\"token comment\">## for apt to be noninteractive</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> DEBIAN_FRONTEND noninteractive</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> DEBCONF_NONINTERACTIVE_SEEN true</span>\n\n<span class=\"token comment\">## preesed tzdata, update package index, upgrade packages and install needed software</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> truncate -s0 /tmp/preseed.cfg; <span class=\"token operator\">\\</span>\n    echo <span class=\"token string\">\"tzdata tzdata/Areas select US\"</span> >> /tmp/preseed.cfg; <span class=\"token operator\">\\</span>\n    echo <span class=\"token string\">\"tzdata tzdata/Zones/US select Pacific\"</span> >> /tmp/preseed.cfg; <span class=\"token operator\">\\</span>\n    debconf-set-selections /tmp/preseed.cfg <span class=\"token operator\">\\</span>\n    &amp;&amp; rm -f /etc/timezone /etc/localtime <span class=\"token operator\">\\</span>\n    &amp;&amp; apt-get update &amp;&amp; apt-get -y install <span class=\"token operator\">\\</span>\n    software-properties-common <span class=\"token operator\">\\</span>\n    make <span class=\"token operator\">\\</span>\n    libzmq3-dev <span class=\"token operator\">\\</span>\n    libpcap-dev</span>\n\n<span class=\"token comment\"># install GCC 11</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> add-apt-repository ppa:ubuntu-toolchain-r/test <span class=\"token operator\">\\</span>\n    &amp;&amp; apt-get update &amp;&amp; apt-get -y install g++-11 <span class=\"token operator\">\\</span>\n    &amp;&amp; apt-get clean <span class=\"token operator\">\\</span>\n    &amp;&amp; rm -rf /var/lib/apt/lists/*</span>\n\n<span class=\"token comment\"># install latest cmake (https://askubuntu.com/a/889453/434353, https://cmake.org/download/)</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.sh /cmake-linux-x86_64.sh</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> mkdir /opt/cmake <span class=\"token operator\">\\</span>\n    &amp;&amp; sh /cmake-linux-x86_64.sh --prefix=/opt/cmake --skip-license <span class=\"token operator\">\\</span>\n    &amp;&amp; ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> . /app</span>\n<span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /app</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> export CC=/usr/bin/gcc-11; export CXX=/usr/bin/g++-11 <span class=\"token operator\">\\</span>\n    &amp;&amp; cmake -DCMAKE_BUILD_TYPE=Release -S . -B build <span class=\"token operator\">\\</span>\n    &amp;&amp; cmake --build build --target all</span></code></pre></div>\n<p>Make sure to install libraries if you link against them. I have <code class=\"language-text\">libzmq3-dev</code> and <code class=\"language-text\">libpcap-dev</code> in this example.</p>\n<p><strong>.dockerignore</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/.vscode\n/build</code></pre></div>\n<h1 id=\"explanation\" style=\"position:relative;\">Explanation<a href=\"#explanation\" aria-label=\"explanation permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<h2 id=\"build\" style=\"position:relative;\">build<a href=\"#build\" aria-label=\"build permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> myapp:master <span class=\"token parameter variable\">-f</span> Dockerfile <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p><code class=\"language-text\">docker build</code> reads <strong>Dockerfile</strong> and creates an image. Every command in <strong>Dockerfile</strong> is a layer on top of the base system. Instruction <code class=\"language-text\">FROM</code> defines the base. In our case it’s Ubuntu 18.04 (codename bionic). Then it installs all required packages. It also applies few fixes to make <code class=\"language-text\">apt-get update</code> work on my machine. Then it copies sources into the image skipping files and directories from <strong>.dockerignore</strong>.</p>\n<p>It copies files in whatever state they are - be careful when start a build on a dirty repository. Check with <code class=\"language-text\">git status</code> before proceed.</p>\n<p>On the same step we run all <strong>cmake</strong> stuff. Some developers only prepare the system on build step, and execute build instructions with <code class=\"language-text\">docker run</code>. Transition to such approach is very simple: replace the last <code class=\"language-text\">RUN</code> with <code class=\"language-text\">CMD</code>. I prefer to build everything in one command and already have artifacts in the image before I create a container.</p>\n<p>Some other developers prefer even trickier solution that eliminates coping sources from host to the container. It's similar to the <code class=\"language-text\">docker run</code> approach, except you also need to mount your local source tree to the container. It probably saves space and time for big projects, but I like to have an exact copy of sources in the container for incident investigation if such thing happens.</p>\n<h2 id=\"rm\" style=\"position:relative;\">rm<a href=\"#rm\" aria-label=\"rm permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> myapp-sdk</code></pre></div>\n<p>Based on that image we will create a live system - a container. You can do any operations only with containers, not images. But containers based on images. Containers like a cake, where image is a recipe. To make sure that there is no container with name <strong>myapp-sdk</strong>, we remove it.</p>\n<h2 id=\"create\" style=\"position:relative;\">create<a href=\"#create\" aria-label=\"create permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> create <span class=\"token parameter variable\">-ti</span> <span class=\"token parameter variable\">--name</span> myapp-sdk myapp:master</code></pre></div>\n<p>With <code class=\"language-text\">docker create</code> we create a container with specified name. But it is different from <code class=\"language-text\">docker run</code> or <code class=\"language-text\">docker exec</code>. Here is a quote from the docs:</p>\n<blockquote>\n<p>The <code class=\"language-text\">docker create</code> command creates a writeable container layer over the specified image and prepares it for running the specified command. The container ID is then printed to <code class=\"language-text\">STDOUT</code>. This is similar to <code class=\"language-text\">docker run -d</code> except the container is never started. You can then use the <code class=\"language-text\">docker start &lt;container_id></code> command to start the container at any point.</p>\n</blockquote>\n<p>So container is there, but it’s not running - means it’s not consuming memory and resources of your computer, but you can take build artifacts from it.</p>\n<h2 id=\"cp\" style=\"position:relative;\">cp<a href=\"#cp\" aria-label=\"cp permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> myapp-sdk:/app/build/myapp ./</code></pre></div>\n<p>The copy command has bad documentation (<a href=\"https://docs.docker.com/engine/reference/commandline/cp/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">docker cp</a> - just look how many downvotes this page has!)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> e909db63a534:/app/build/myapp ./</code></pre></div>\n<p>Instead of name you can use container ID, you need its short form. But be careful: use container ID, not image ID. Read the metaphor about the cake again.</p>\n<p>To get the container ID run <code class=\"language-text\">docker ps -a</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span>\nCONTAINER ID   IMAGE                    COMMAND                  CREATED              STATUS                          PORTS     NAMES\n64568f4fe55f   myapp:master           <span class=\"token string\">\"/bin/bash\"</span>              <span class=\"token number\">17</span> hours ago         Created                                   myapp-sdk</code></pre></div>\n<p>But it’s better to use a name that we used in the <code class=\"language-text\">docker create</code> command.</p>\n<p>Do not confuse it with image \"name\" (technically it’s a tag) <strong>myapp:master</strong>.</p>\n<h2 id=\"rm-again\" style=\"position:relative;\">rm again<a href=\"#rm-again\" aria-label=\"rm again permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> myapp-sdk</code></pre></div>\n<p>The last step is clean up - remove the container</p>\n<h1 id=\"example-with-docker-run\" style=\"position:relative;\">Example with <code class=\"language-text\">docker run</code><a href=\"#example-with-docker-run\" aria-label=\"example with docker run permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>Using the same <strong>Dockerfile</strong> we create an image</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token parameter variable\">-t</span> myapp:master <span class=\"token parameter variable\">-f</span> Dockerfile <span class=\"token builtin class-name\">.</span></code></pre></div>\n<p>But then we run a container</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">--name</span> myapp-cmd myapp:master <span class=\"token function\">bash</span></code></pre></div>\n<p>With this command we jump into container’s terminal (important to use <code class=\"language-text\">-it</code> flag here) and can run build scripts over and over</p>\n<h1 id=\"example-with-docker-exec\" style=\"position:relative;\">Example with <code class=\"language-text\">docker exec</code><a href=\"#example-with-docker-exec\" aria-label=\"example with docker exec permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>In order to use <code class=\"language-text\">docker exec</code>, the container must be running.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> 64568f4fe55f <span class=\"token function\">ls</span>\nError response from daemon: Container 64568f4fe55ffd1fddc5c6021ecd0ed9a1313cd36c4eaab711c60dbd53c21dae is not running</code></pre></div>\n<p>Execute <code class=\"language-text\">docker run</code> with <code class=\"language-text\">-d -t</code> flags:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">--name</span> myapp-cmd myapp:master</code></pre></div>\n<p>To run a container again you need to remove a previous one that was created with the same name</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker: Error response from daemon: Conflict. The container name <span class=\"token string\">\"/myapp-cmd\"</span> is already <span class=\"token keyword\">in</span> use by container <span class=\"token string\">\"334905f5a32c98c8950005b11985c63ea79ed04b2a22b3a9f545149ce28020fe\"</span><span class=\"token builtin class-name\">.</span> You have to remove <span class=\"token punctuation\">(</span>or <span class=\"token function\">rename</span><span class=\"token punctuation\">)</span> that container to be able to reuse that name.</code></pre></div>\n<p>Remove</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> myapp-cmd</code></pre></div>\n<p>For example we can list files</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker exec myapp-cmd ls /app/build</code></pre></div>\n<p>to verify what files actually exist in the container. <code class=\"language-text\">docker exec</code> also can take container ID (not image ID). Reminder: to get the container ID run <code class=\"language-text\">docker ps -a</code>. BTW in case you need image ID, then run <code class=\"language-text\">docker images</code>.</p>\n<h1 id=\"done\" style=\"position:relative;\">Done<a href=\"#done\" aria-label=\"done permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h1>\n<p>Okay, there are so many nuances with docker. I think it's time to wrap up for today. I hope this small docker instruction will help someone (or even me in the future) to easily build their C++ app.</p>","excerpt":"Photo by Ant Rozetsky on Unsplash Why it happens On my personal workstation I use Manjaro, which is a version of Arch with a nice installer…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#why-it-happens\">Why it happens</a></p>\n</li>\n<li>\n<p><a href=\"#my-goal\">My goal</a></p>\n</li>\n<li>\n<p><a href=\"#tldr\">TL;DR</a></p>\n</li>\n<li>\n<p><a href=\"#explanation\">Explanation</a></p>\n<ul>\n<li><a href=\"#build\">build</a></li>\n<li><a href=\"#rm\">rm</a></li>\n<li><a href=\"#create\">create</a></li>\n<li><a href=\"#cp\">cp</a></li>\n<li><a href=\"#rm-again\">rm again</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#example-with-docker-run\">Example with <code class=\"language-text\">docker run</code></a></p>\n</li>\n<li>\n<p><a href=\"#example-with-docker-exec\">Example with <code class=\"language-text\">docker exec</code></a></p>\n</li>\n<li>\n<p><a href=\"#done\">Done</a></p>\n</li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/5bd10ea5-1d7d-5a10-b2f9-3f939c9f7309.jpg"},"frontmatter":{"date":"October 15, 2021","published":"July 17, 2022","lastModified":"July 17, 2022","title":"Containerized builds with Docker","subtitle":"Build C++ app written with the new standard (c++20) on Ubuntu 18.04 in 2022","section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/containerized-builds-with-docker.md","url":"/code/containerized-builds-with-docker","next":{"excerpt":"I have to use Google Chrome because of one plugin that only supports this browser, and I'm puzzled how to make a full page screenshot. You…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/full-page-screenshot-in-chrome.md","frontmatter":{"title":"Full page screenshot in Chrome","date":"2021-10-22T00:00:00.000Z","topic":null,"article":null},"id":"64740a84-4ef2-5e8e-b7fb-fb18e82fb516"},"previous":{"excerpt":"Let's take a look on slightly different implementations of Fisher-Yates shuffle algorithm. ESBench  MeasureThat  Benchmarks ESBench https…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/shuffle-algorithm-performance.md","frontmatter":{"title":"Shuffle algorithm performance in JavaScript","date":"2021-09-30T00:00:00.000Z","topic":null,"article":null},"id":"2911b6ff-53e0-5046-bfb3-3a9ee22e7b03"},"recentArticles":[{"excerpt":"Then here is the list of alternatives Intel-IPP Links: https://software.intel.com/en-us/intel-ipp , https://github.com/intel/ipp-crypto…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/if-you-hate-openssl.md","frontmatter":{"title":"If you hate OpenSSL","date":"2024-05-10T00:00:00.000Z","topic":null,"article":null},"id":"0c36d8cc-31d2-582b-9929-51cf8bed8920"},{"excerpt":"cool thing for the background (play it together with egzod - royalty) nice globe  Cool WebGL examples (no code, sad)","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/webgl.md","frontmatter":{"title":"WebGL","date":"2023-07-17T00:00:00.000Z","topic":null,"article":null},"id":"1bbe4c4e-2cc1-5fec-a2ca-b8cefdbfc6ee"},{"excerpt":"Check that you have ESLint extension installed. (Optional) While you are playing with linters and VS Code extensions, you can think about a…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/eslint-for-gatsby-howto.md","frontmatter":{"title":"ESLint in VS Code for Gatsby 5 blog","date":"2023-05-29T00:00:00.000Z","topic":null,"article":null},"id":"5953c80a-01e6-56c1-985e-bb9c0b1f340b"},{"excerpt":"The reason behind \"connect, disconnect and then connect again\" behavior might be that the old socket was still listening because it was half…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/how-to-close-tcp-socket-in-nodejs.md","frontmatter":{"title":"How to close TCP socket in Node.js","date":"2023-02-02T00:00:00.000Z","topic":null,"article":null},"id":"e7b7740f-e7b4-565f-a843-05bf8c27fda3"},{"excerpt":"When does verification happen? From this wiki it seems like the get function does it. What security level to use? https://www.openssl.org…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/ssl-tls-client-socket-with-openssl.md","frontmatter":{"title":"SSL/TLS client socket with OpenSSL","date":"2023-01-26T00:00:00.000Z","topic":null,"article":null},"id":"1f2b456a-3ea6-5863-a966-8579f11b39bd"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}