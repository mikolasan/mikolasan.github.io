{"componentChunkName":"component---src-templates-blog-template-js","path":"/code/cpp/use-cpp-library-from-nodejs","result":{"data":{"markdownRemark":{"html":"<p>It's possible to use SWIG (see some links at the end of this post), but for a small library with 3 exported functions it's feasable to do everything by hand.</p>\n<h2 id=\"bindings\" style=\"position:relative;\">Bindings<a href=\"#bindings\" aria-label=\"bindings permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p><strong>my_library_wrap.cxx</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;node.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;v8.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assert.h></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"my_library.h\"</span></span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// std::string make_password(std::string id, int sequence, int version);</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">MakePassword</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> v8<span class=\"token double-colon punctuation\">::</span>FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Value<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> info<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">IsString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">IsInt32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">IsInt32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">auto</span> isolate <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">id</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> ID_LENGTH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">auto</span> exception <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">Exception</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Bad ID length\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    isolate<span class=\"token operator\">-></span><span class=\"token function\">ThrowException</span><span class=\"token punctuation\">(</span>exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Int32<span class=\"token operator\">></span> sequence <span class=\"token operator\">=</span> info<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">As</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Int32<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Int32<span class=\"token operator\">></span> version <span class=\"token operator\">=</span> info<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token generic-function\"><span class=\"token function\">As</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Int32<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>string <span class=\"token function\">id_s</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>id<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>string password <span class=\"token operator\">=</span> <span class=\"token function\">make_password</span><span class=\"token punctuation\">(</span>id_s<span class=\"token punctuation\">,</span> sequence<span class=\"token operator\">-></span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> version<span class=\"token operator\">-></span><span class=\"token function\">Value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  info<span class=\"token punctuation\">.</span><span class=\"token function\">GetReturnValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Object<span class=\"token operator\">></span> exports<span class=\"token punctuation\">,</span> v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Value<span class=\"token operator\">></span> <span class=\"token keyword\">module</span><span class=\"token punctuation\">,</span> v8<span class=\"token double-colon punctuation\">::</span>Local<span class=\"token operator\">&lt;</span>v8<span class=\"token double-colon punctuation\">::</span>Context<span class=\"token operator\">></span> context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> priv<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">auto</span> isolate <span class=\"token operator\">=</span> context<span class=\"token operator\">-></span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  key <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"makePassword\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  value <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> MakePassword<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">GetFunction</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToLocalChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>exports<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">IsJust</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">// namespace</span>\n\n<span class=\"token function\">NODE_MODULE_CONTEXT_AWARE</span><span class=\"token punctuation\">(</span>NODE_GYP_MODULE_NAME<span class=\"token punctuation\">,</span> Initialize<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><a href=\"https://github.com/nodejs/node/blob/master/test/addons/hello-world/binding.cc\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Hello world</a> of Node.js bindings</li>\n<li><a href=\"https://v8.dev/docs/embed\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">v8 docs</a></li>\n<li><a href=\"https://v8docs.nodesource.com/node-16.0/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">V8 API Reference Guide</a> (Node 16)\n<ul>\n<li><a href=\"https://v8docs.nodesource.com/node-16.0/dd/d0d/classv8_1_1_function_callback_info.html\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">FunctionCallbackInfo</a></li>\n<li><a href=\"https://v8docs.nodesource.com/node-16.0/de/deb/classv8_1_1_local.html\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Local</a></li>\n<li><a href=\"https://v8docs.nodesource.com/node-16.0/d9/d4b/classv8_1_1_maybe.html\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Maybe</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"config-file\" style=\"position:relative;\">Config file<a href=\"#config-file\" aria-label=\"config file permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h3>\n<p><strong>binding.gyp</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  'targets'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      'target_name'<span class=\"token operator\">:</span> 'my_library'<span class=\"token punctuation\">,</span>\n      'sources'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>'my_library_wrap.cxx'<span class=\"token punctuation\">,</span> 'my_library.cpp'<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      'include_dirs'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>'thirdparty/include'<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      'defines'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          'OPENSSL_CONFIGURED_API=0x10101000L'<span class=\"token punctuation\">,</span>\n          'OPENSSL_API_COMPAT=0x10101000L'<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      'cflags!'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> '-fno-exceptions' <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      'cflags_cc!'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> '-fno-exceptions' <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      'libraries'<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>'-L&lt;(module_root_dir)/thirdparty/lib'<span class=\"token punctuation\">,</span> '-lPocoFoundation'<span class=\"token punctuation\">,</span> '-lPocoCrypto'<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><a href=\"https://github.com/nodejs/node-gyp/issues/17\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">exception handling disabled</a></li>\n<li><a href=\"https://github.com/nodejs/node-gyp/issues/328\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">link libraries</a></li>\n</ul>\n<h3 id=\"build\" style=\"position:relative;\">Build<a href=\"#build\" aria-label=\"build permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node-gyp configure\nnode-gyp build</code></pre></div>\n<h3 id=\"v8-config\" style=\"position:relative;\">v8 config<a href=\"#v8-config\" aria-label=\"v8 config permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h3>\n<p><em>???</em> I don't remember why I looked into that :)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">target_cpu = \"x64\"\nuse_custom_libcxx = false\nv8_enable_i18n_support = false\nv8_static_library = false\nv8_monolithic = false\nv8_expose_symbols = true</code></pre></div>\n<ul>\n<li><a href=\"https://chromium.googlesource.com/v8/v8.git/+/master/gni/v8.gni\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Chromium v8 config</a></li>\n<li><a href=\"https://v8.dev/docs/build-gn\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Building V8 with GN</a></li>\n</ul>\n<h2 id=\"swig\" style=\"position:relative;\">SWIG<a href=\"#swig\" aria-label=\"swig permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/9629677/how-can-i-use-a-c-library-from-node-js/27917698#27917698\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://stackoverflow.com/questions/9629677/how-can-i-use-a-c-library-from-node-js/27917698#27917698</a></li>\n<li><a href=\"https://github.com/swig/swig/wiki/Getting-Started\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://github.com/swig/swig/wiki/Getting-Started</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/swig/swig.git\ncd swig\n./autogen.sh &amp;&amp; ./configure &amp;&amp; make</code></pre></div>","excerpt":"It's possible to use SWIG (see some links at the end of this post), but for a small library with 3 exported functions it's feasable to do…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#bindings\">Bindings</a></p>\n<ul>\n<li><a href=\"#config-file\">Config file</a></li>\n<li><a href=\"#build\">Build</a></li>\n<li><a href=\"#v8-config\">v8 config</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#swig\">SWIG</a></p>\n</li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/4eadf064-240d-5e9b-b880-a466ded46a1f.jpg"},"frontmatter":{"date":"April 06, 2021","published":"April 06, 2021","lastModified":"April 06, 2021","title":"Use C++ library from Node.js","subtitle":null,"section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/use-cpp-library-from-nodejs.md","url":"/code/cpp/use-cpp-library-from-nodejs","next":{"excerpt":"Code TODO Reference https://stackoverflow.com/questions/4181784/how-to-set-socket-timeout-in-c-when-making-multiple-connections https…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/non-blocking-tcp-socket.md","frontmatter":{"title":"Non blocking TCP socket","date":"2021-04-06T00:00:00.000Z","topic":null,"article":null},"id":"51b346fd-80bf-5b3d-a440-e8d3a8e93030"},"previous":{"excerpt":"https://wordsandbuttons.online/logic_programming_in_cpp.html https://yanniss.github.io/lc++/paper.pdf https://www.reddit.com/r/cpp/comments…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/logic-programming.md","frontmatter":{"title":"Logic programming in C++","date":"2019-01-24T00:00:00.000Z","topic":null,"article":null},"id":"42cbcfaf-7750-55a5-aba4-c078bf4c8809"},"recentArticles":[{"excerpt":"I need to visualize dynamic spiking neuron activity. I want to use C++ with OpenGL via a scene graph/engine layer with easy camera…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/render-and-logic.md","frontmatter":{"title":"Keep render and logic separate","date":"2025-06-24T00:00:00.000Z","topic":null,"article":null},"id":"17b5d573-8291-53d9-8496-e9056eeef264"},{"excerpt":"Here we will write a program that takes code from a  (need to find API that doesn't read files from local filesystem) and compiles it.\nThe…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/llvm-library-example.md","frontmatter":{"title":"LLVM library example","date":"2025-02-24T00:00:00.000Z","topic":null,"article":null},"id":"9616cb95-794f-5989-9f26-f5a2995d3237"},{"excerpt":"Using raw pointers Most often leads to the problem of not following the rule of three/five/zero. Also easy to skip the initialization step…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/5-cpp-mistakes-you-should-avoid.md","frontmatter":{"title":"5 C++ mistakes you should avoid","date":"2023-05-13T00:00:00.000Z","topic":null,"article":null},"id":"48af4769-d500-5b6a-9cab-505d1cea055d"},{"excerpt":"On this blog Containerized builds with Docker C++ Cross-platform Serial Port libraries Other blogs Fluent {C++} Jonathan Boccara's blog C…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/resources.md","frontmatter":{"title":"C++ resources","date":"2023-05-13T00:00:00.000Z","topic":null,"article":null},"id":"d8327cb6-c43c-59e8-8bbf-5e35f59a0f7f"},{"excerpt":"I found a use of variadic templates in C++. This is  max function that finds the max element in the list of arguments at compile time. Very…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/code/cpp/variadic-templates.md","frontmatter":{"title":"Variadic templates in C++","date":"2022-07-28T00:00:00.000Z","topic":null,"article":null},"id":"d3fc025d-f936-5c27-95eb-a14465ee6003"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}