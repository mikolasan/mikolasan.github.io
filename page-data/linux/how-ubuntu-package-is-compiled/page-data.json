{"componentChunkName":"component---src-templates-blog-template-js","path":"/linux/how-ubuntu-package-is-compiled","result":{"data":{"markdownRemark":{"html":"<p>For example <strong>OpenSSL</strong> library <a href=\"https://packages.ubuntu.com/bionic/libssl-dev\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">libssl-dev</a></p>\n<p>Go to <strong>packages.ubuntu.com</strong> and look for <strong>download source package</strong> (<a href=\"https://packages.ubuntu.com/source/bionic/openssl\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">link for bionic version of openssl</a>)</p>\n<p>There you will get some archives:</p>\n<ul>\n<li><code class=\"language-text\">debian.tar.xz</code> - where all build scripts and patches are</li>\n<li><code class=\"language-text\">orig.tar.gz</code> - package's source code</li>\n</ul>\n<p>So now the question is: how to apply patches to ubuntu deb package manually? According to <a href=\"https://packaging.ubuntu.com/html/patches-to-packages.html\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Ubuntu Packaging Guide</a> you need to use a special tool: <strong>quilt</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> quilt\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">QUILT_PATCHES</span><span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>/openssl-patches\nquilt applied <span class=\"token comment\"># funny but no patches applied at this step</span>\nquilt push <span class=\"token parameter variable\">-a</span> <span class=\"token comment\"># apply all patches</span></code></pre></div>","excerpt":"For example OpenSSL library libssl-dev Go to packages.ubuntu.com and look for download source package (link for bionic version of openssl…","tableOfContents":"","fields":{"socialcard":"gatsby-plugin-social-card/73882d70-5135-5b2e-9eba-473d77a32693.jpg"},"frontmatter":{"date":"April 09, 2024","published":"April 09, 2024","lastModified":"April 09, 2024","title":"How Ubuntu package is compiled?","subtitle":"when you want to recompile with identical configuration","section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/how-ubuntu-package-is-compiled.md","url":"/linux/how-ubuntu-package-is-compiled","next":{"excerpt":"I guess you can install raspberry jukebox and do not worry about conflicting dependencies and a pile of configuration. But if you want to…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/local-music-server-on-raspberry.md","frontmatter":{"title":"Local music server","date":"2024-04-12T00:00:00.000Z","topic":null,"article":null},"id":"ce30f8a1-a416-51ed-a054-3324185f0508"},"previous":{"excerpt":"I wonder if there is a UI framework for making minimalistic and beautiful apps that work without OS, the things that we see in UEFI settings…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/build-grub-from-source.md","frontmatter":{"title":"Build GRUB2 from source","date":"2023-08-03T00:00:00.000Z","topic":null,"article":null},"id":"9fcca57e-76ac-5ee0-aedc-a37c9fb87b5e"},"recentArticles":[{"excerpt":"The time is now. So you are following the official path","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/lunar-vim.md","frontmatter":{"title":"Lunar Vim","date":"2025-07-12T00:00:00.000Z","topic":null,"article":null},"id":"96fd1359-d24f-593f-bfd5-c6ea877b7e1e"},{"excerpt":"Prologue When I changed my email with Asana, the service that I liked so much, I found it when I had trouble planning my day, forgiving…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/task-management-with-taskwarrior.md","frontmatter":{"title":"Task management with taskwarrior","date":"2025-06-19T00:00:00.000Z","topic":null,"article":null},"id":"d251091d-7777-5f57-a398-6317d95233da"},{"excerpt":"I called my pool 'dinosaur' and three datasets, you guessed it, triassic, jurassic, cretaceous Steps: Reference archwiki - zfs zfs handbook…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/encrypted-backup-with-zfs.md","frontmatter":{"title":"Encrypted backup with ZFS","date":"2025-06-10T00:00:00.000Z","topic":null,"article":null},"id":"a8cfe7c2-1870-5a4d-a4b6-a9e5cb56f73b"},{"excerpt":"I already got used to auto-starting services when they run with docker compose or docker stack, but I like it even more when the apps run…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/autostart-everything.md","frontmatter":{"title":"Autostart everything","date":"2025-05-26T00:00:00.000Z","topic":null,"article":null},"id":"7c1cd1ea-fc7f-558a-9576-5f5420866bad"},{"excerpt":"So this happened when I was working on a Go project and quite frequently compiled binaries for deployment in docker containers. I didn't pay…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/clear-space.md","frontmatter":{"title":"Clear space on Linux","date":"2025-04-15T00:00:00.000Z","topic":null,"article":null},"id":"b3347ef2-f534-5c29-bc5e-0ed82ca4c7ee"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}