{"componentChunkName":"component---src-templates-blog-template-js","path":"/linux/build-android-gsi-10","result":{"data":{"markdownRemark":{"html":"<p>I hate Reddit and forums.</p>\n<p>Especially popular forums like XDA, the source of unique and valuable information and good advice. But. All information is lost in 100 page threads. Good comments indistinguishable from bad comments. That’s why I like StackOverflow so much. I was on this forum and some discussion went me on a wrong track. So, let's see what happenned.</p>\n<p>...I think this is the explanation why <a href=\"/linux/build-lineage-16\">my Lineage ROM</a> stuck on boot logo:</p>\n<blockquote>\n<p>\"In Android 9 and higher, this requirement has changed to enable vendors to boot a GSI. Specifically, Keymaster shouldn't perform verification because the version info reported by the GSI may not match the version info reported by vendor's bootloader. For devices implementing Keymaster 3 or lower, vendors must modify the Keymaster implementation to skip verification (or upgrade to Keymaster 4). For details on Keymaster, refer to Hardware-backed Keystore.”</p>\n<p><a href=\"https://www.reddit.com/r/LineageOS/comments/k6ph0s/how_do_i_debug_a_device_that_doesnt_get_into_boot/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Comment on reddit</a></p>\n</blockquote>\n<p>So, no Lineage, instead I need to build <a href=\"https://source.android.com/docs/setup/create/gsi\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">GSI</a> first. Why? Because it will work. That's what they said.</p>\n<p>Okay, there is no <code class=\"language-text\">android9-gsi</code> branch. I’ll skip Android 9 GSI for now. Android 10 GSI it is.</p>\n<h2 id=\"docker-setup\" style=\"position:relative;\">Docker setup<a href=\"#docker-setup\" aria-label=\"docker setup permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>I build on Manjaro and get exactly the same error as <a href=\"https://gist.github.com/Roker2/f9a6422a70840435880a11d12902bafc\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">these guys</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Invalid filesystem option set: has_journal,extent,huge_file,flex_bg,metadata_csum,metadata_csum_seed,64bit,dir_nlink,extra_isize,orphan_file</code></pre></div>\n<p>Then I decide to make right, in the Docker. Because I already have the whole build tree setup on my host machine, then I will mount this folder into the docker container.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">-v</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>/gsi:/gsi <span class=\"token parameter variable\">--name</span> gsi-build ubuntu:18.04 <span class=\"token function\">bash</span>\n<span class=\"token comment\"># re-enter later</span>\n<span class=\"token function\">docker</span> start <span class=\"token parameter variable\">-a</span> <span class=\"token parameter variable\">-i</span> gsi-build\n<span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">--tty</span> <span class=\"token parameter variable\">--interactive</span> <span class=\"token parameter variable\">--privileged</span> gsi-build <span class=\"token function\">bash</span></code></pre></div>\n<p>In the Docker container:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> python3 <span class=\"token function\">unzip</span> m4 <span class=\"token function\">rsync</span> openssl</code></pre></div>\n<p>I had <code class=\"language-text\">openssl</code> missing and as a result of my almost empty docker setup</p>\n<ul>\n<li>I did some research in <code class=\"language-text\">external/avb/avbtool</code> and realized that it is a Go tool that executes different programs including <code class=\"language-text\">apexer</code> that spits out Python traceback. <code class=\"language-text\">apexer</code> is a beefy binary, 28MB. Apparently it includes Python interpreter inside. So, I can add the <code class=\"language-text\">--verbose</code> flag into the Go program, and add more prints into the Python scripts in order to understand what is wrong.</li>\n<li>Also I manually converted <code class=\"language-text\">device/generic/goldfish/tools/mk_combined_img.py</code> from Python 2 to 3 because it was the only script that failed in my container with Python 3.6</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">diff --git a/tools/mk_combined_img.py b/tools/mk_combined_img.py\nindex 1b7bbff0..c67d18b2 100755\n<span class=\"token coord\">--- a/tools/mk_combined_img.py</span>\n<span class=\"token coord\">+++ b/tools/mk_combined_img.py</span>\n@@ -11,7 +11,8 @@ def check_sparse(filename):\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    magic = 3978755898\n<span class=\"token prefix unchanged\"> </span>    with open(filename, 'rb') as i:\n<span class=\"token prefix unchanged\"> </span>        word = i.read(4)\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>        if magic == int(word[::-1].encode('hex'), 16):\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>        # if magic == int(word[::-1].encode('hex'), 16):\n<span class=\"token prefix inserted\">+</span>        if magic == int.from_bytes(word, byteorder='big'):\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>            return True\n<span class=\"token prefix unchanged\"> </span>    return False\n</span>\n@@ -45,18 +46,18 @@ def parse_input(input_file):\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>        try:\n<span class=\"token prefix unchanged\"> </span>            partition_info[\"num\"] = int(line[2])\n<span class=\"token prefix unchanged\"> </span>        except ValueError:\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>            print \"'%s' cannot be converted to int\" % (line[2])\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>            print(\"'%s' cannot be converted to int\" % (line[2]))\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>            sys.exit(1)\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>        # check if the partition number is out of range\n<span class=\"token prefix unchanged\"> </span>        if partition_info[\"num\"] > len(lines) or partition_info[\"num\"] &lt; 0:\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>            print \"Invalid partition number: %d, range [1..%d]\" % \\\n<span class=\"token prefix deleted\">-</span>                    (partition_info[\"num\"], len(lines))\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>            print(\"Invalid partition number: %d, range [1..%d]\" % \\\n<span class=\"token prefix inserted\">+</span>                    (partition_info[\"num\"], len(lines)))\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>            sys.exit(1)\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>        # check if the partition number is duplicated\n<span class=\"token prefix unchanged\"> </span>        if partition_info[\"num\"] in num_used:\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>            print \"Duplicated partition number:%d\" % (partition[\"num\"])\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>            print(\"Duplicated partition number:%d\" % (partition[\"num\"]))\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>            sys.exit(1)\n<span class=\"token prefix unchanged\"> </span>        num_used.add(partition_info[\"num\"])\n<span class=\"token prefix unchanged\"> </span>        partitions.append(partition_info)\n</span>@@ -68,23 +69,23 @@ def write_partition(partition, output_file, offset):\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    # $ dd if=/path/to/image of=/path/to/output conv=notrunc,sync \\\n<span class=\"token prefix unchanged\"> </span>    #   ibs=1024k obs=1024k seek=&lt;offset>\n<span class=\"token prefix unchanged\"> </span>    dd_comm = ['dd', 'if='+partition[\"path\"], 'of='+output_file,'conv=notrunc,sync',\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>                'ibs=1024k','obs=1024k', 'seek='+str(offset)]\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>                'ibs=1024k','obs=1024k', 'seek='+str(int(offset))]\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    shell_command(dd_comm)\n<span class=\"token prefix unchanged\"> </span>    return\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>def unsparse_partition(partition):\n<span class=\"token prefix unchanged\"> </span>    # if the input image is in sparse format, unsparse it\n<span class=\"token prefix unchanged\"> </span>    simg2img = os.environ.get('SIMG2IMG', 'simg2img')\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    print \"Unsparsing %s\" % (partition[\"path\"]),\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    print(\"Unsparsing %s\" % (partition[\"path\"]))\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    partition[\"fd\"], temp_file = mkstemp()\n<span class=\"token prefix unchanged\"> </span>    shell_command([simg2img, partition[\"path\"], temp_file])\n<span class=\"token prefix unchanged\"> </span>    partition[\"path\"] = temp_file\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    print \"Done\"\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    print(\"Done\")\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    return\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>def clear_partition_table(filename):\n<span class=\"token prefix unchanged\"> </span>    sgdisk = os.environ.get('SGDISK', 'sgdisk')\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    print \"%s --clear %s\" % (sgdisk, filename)\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    print(\"%s --clear %s\" % (sgdisk, filename))\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    shell_command([sgdisk, '--clear', filename])\n<span class=\"token prefix unchanged\"> </span>    return\n</span>\n@@ -116,7 +117,7 @@ def main():\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    # check input file\n<span class=\"token prefix unchanged\"> </span>    config_filename = args.input\n<span class=\"token prefix unchanged\"> </span>    if not os.path.exists(config_filename):\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>        print \"Invalid config file name \" + config_filename\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>        print(\"Invalid config file name \" + config_filename)\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>        sys.exit(1)\n</span>\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    # read input file\n</span>@@ -144,7 +145,7 @@ def main():\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    # add padding\n<span class=\"token prefix unchanged\"> </span>    # $ dd if=/dev/zero of=/path/to/output conv=notrunc bs=1 \\\n<span class=\"token prefix unchanged\"> </span>    #   count=1024k seek=&lt;offset>\n</span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span>    offset = os.path.getsize(output_filename) / 1024 / 1024\n</span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span>    offset = int(os.path.getsize(output_filename) / 1024 / 1024)\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span>    shell_command(['dd', 'if=/dev/zero', 'of='+output_filename,\n<span class=\"token prefix unchanged\"> </span>                'conv=notrunc', 'bs=1024k', 'count=1', 'seek='+str(offset)])</span></code></pre></div>\n<p>The end result: <code class=\"language-text\">out/target/product/generic/system.img</code>. But I still don't know why it fails on Manjaro.</p>\n<h2 id=\"treble\" style=\"position:relative;\">Treble?<a href=\"#treble\" aria-label=\"treble permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>Oh. After I've read about the process of <a href=\"/linux/unofficial-treble-support-for-nvidia-shield\">making old devices Treble-ready</a> I realized that I will need new boot, system, and vendor partitions. And GSI only provides the system partition (because it's <code class=\"language-text\">system.img</code>).</p>\n<h2 id=\"install\" style=\"position:relative;\">Install<a href=\"#install\" aria-label=\"install permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>Install GSI from TWRP <a href=\"https://4pda.to/forum/index.php?showtopic=892755&#x26;st=3180#entry75709782\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">link</a></p>","excerpt":"I hate Reddit and forums. Especially popular forums like XDA, the source of unique and valuable information and good advice. But. All…","tableOfContents":"<ul>\n<li><a href=\"#docker-setup\">Docker setup</a></li>\n<li><a href=\"#treble\">Treble?</a></li>\n<li><a href=\"#install\">Install</a></li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/349a597e-6256-537b-acf3-2b3530020f2c.jpg"},"frontmatter":{"date":"July 06, 2023","published":"July 06, 2023","lastModified":"July 06, 2023","title":"Build Android GSI","subtitle":"Generic System Image","section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/build-android-gsi-10.md","url":"/linux/build-android-gsi-10","next":{"excerpt":"Check support Check Treble support with TrebleInfo Treblize Of course Nvidia Shield Tablet doesn't support Treble. But this should be simple…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/unofficial-treble-support-for-nvidia-shield.md","frontmatter":{"title":"Treble for NVIDIA Shield K1","date":"2023-07-07T00:00:00.000Z","topic":null,"article":null},"id":"b9de171a-5788-56a9-be71-618453e32b34"},"previous":{"excerpt":"Here is the story of how I continued upgrading Android on my Nvidia Shield tablet because one day I saw a popup in the app, where I read…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/build-lineage-16.md","frontmatter":{"title":"Build Lineage 16","date":"2023-06-27T00:00:00.000Z","topic":null,"article":null},"id":"b4b3a0f7-e09c-5c6f-bcd0-74e7ec0ad8c0"},"recentArticles":[{"excerpt":"The time is now. So you are following the official path","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/lunar-vim.md","frontmatter":{"title":"Lunar Vim","date":"2025-07-12T00:00:00.000Z","topic":null,"article":null},"id":"96fd1359-d24f-593f-bfd5-c6ea877b7e1e"},{"excerpt":"Prologue When I changed my email with Asana, the service that I liked so much, I found it when I had trouble planning my day, forgiving…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/task-management-with-taskwarrior.md","frontmatter":{"title":"Task management with taskwarrior","date":"2025-06-19T00:00:00.000Z","topic":null,"article":null},"id":"d251091d-7777-5f57-a398-6317d95233da"},{"excerpt":"I called my pool 'dinosaur' and three datasets, you guessed it, triassic, jurassic, cretaceous Steps: Reference archwiki - zfs zfs handbook…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/encrypted-backup-with-zfs.md","frontmatter":{"title":"Encrypted backup with ZFS","date":"2025-06-10T00:00:00.000Z","topic":null,"article":null},"id":"a8cfe7c2-1870-5a4d-a4b6-a9e5cb56f73b"},{"excerpt":"I already got used to auto-starting services when they run with docker compose or docker stack, but I like it even more when the apps run…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/autostart-everything.md","frontmatter":{"title":"Autostart everything","date":"2025-05-26T00:00:00.000Z","topic":null,"article":null},"id":"7c1cd1ea-fc7f-558a-9576-5f5420866bad"},{"excerpt":"So this happened when I was working on a Go project and quite frequently compiled binaries for deployment in docker containers. I didn't pay…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/clear-space.md","frontmatter":{"title":"Clear space on Linux","date":"2025-04-15T00:00:00.000Z","topic":null,"article":null},"id":"b3347ef2-f534-5c29-bc5e-0ed82ca4c7ee"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}