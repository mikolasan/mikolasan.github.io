{"componentChunkName":"component---src-templates-blog-template-js","path":"/linux/linux-kernel-module-hello-world","result":{"data":{"markdownRemark":{"html":"<p>Letâ€™s make a hello-world type Linux kernel module.</p>\n<h2 id=\"get-linux-kernel-sources\" style=\"position:relative;\">Get Linux kernel sources<a href=\"#get-linux-kernel-sources\" aria-label=\"get linux kernel sources permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>First we need to integrate a Makefile, such as <strong>hello.mk</strong> into the Linux kernel source tree. Thus you'll first need to obtain the Linux kernel source code from <a href=\"https://www.kernel.org/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">the official website</a> or your distribution's package manager and get it extracted.</p>\n<p>Here's an example for Arch (or Manjaro)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> pacman <span class=\"token parameter variable\">-S</span> base-devel <span class=\"token function\">git</span> xmlto cpio pahole\n<span class=\"token function\">mkdir</span> ~/kernel_build/\n<span class=\"token builtin class-name\">cd</span> kernel_build\n<span class=\"token function\">git</span> clone https://gitlab.manjaro.org/packages/core/linux612.git\n<span class=\"token builtin class-name\">cd</span> linux612\nmakepkg <span class=\"token parameter variable\">--nobuild</span>\n<span class=\"token assign-left variable\">KERNEL_SRC</span><span class=\"token operator\">=~</span>/kernel_build/linux612/src/linux-6.12\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/lib/modules/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-r</span><span class=\"token variable\">)</span></span>/build/Module.symvers <span class=\"token string\">\"<span class=\"token variable\">$KERNEL_SRC</span>/\"</span>\nzcat /proc/config.gz <span class=\"token operator\">></span> <span class=\"token string\">\"<span class=\"token variable\">$KERNEL_SRC</span>/.config\"</span>\n<span class=\"token function\">make</span> <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"<span class=\"token variable\">$KERNEL_SRC</span>\"</span> modules_prepare\n<span class=\"token comment\"># build a kernel module (usbip) example</span>\n<span class=\"token function\">make</span> <span class=\"token parameter variable\">--directory</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$KERNEL_SRC</span>\"</span> <span class=\"token assign-left variable\">M</span><span class=\"token operator\">=</span>drivers/usb/usbip/</code></pre></div>\n<h2 id=\"add-driver-directory\" style=\"position:relative;\">Add driver directory<a href=\"#add-driver-directory\" aria-label=\"add driver directory permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>So, one thing is if you want to make changes to an existing module, but we will be creating a totally fresh one.\nFor that, navigate to the <code class=\"language-text\">drivers</code> directory and create a new directory for your module. For example, if your module is named \"hello,\" you create a directory called <code class=\"language-text\">hello</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$KERNEL_SRC</span>\n<span class=\"token function\">mkdir</span> <span class=\"token variable\">$KERNEL_SRC</span>/drivers/hello\n\n<span class=\"token function\">nano</span> <span class=\"token variable\">$KERNEL_SRC</span>/drivers/hello/hello.c\n<span class=\"token function\">nano</span> <span class=\"token variable\">$KERNEL_SRC</span>/drivers/hello/hello.mk\n<span class=\"token function\">nano</span> <span class=\"token variable\">$KERNEL_SRC</span>/drivers/hello/Kconfig</code></pre></div>\n<p>Create a Kconfig file if you want your module to be selectable through the kernel configuration menu, create a file named <code class=\"language-text\">Kconfig</code> inside your module directory (<code class=\"language-text\">drivers/hello/Kconfig</code>). The Kconfig file should define the configuration options for your module.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">nano</span> <span class=\"token variable\">$KERNEL_SRC</span>/drivers/hello/Kconfig</code></pre></div>\n<p>with this content</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">config HELLO_MODULE\n    tristate \"Hello Module\"\n    default m\n    help\n        This is a sample kernel module.\n\nconfig HELLO_MODULE_OPTION\n    bool \"Enable additional option\"\n    depends on HELLO_MODULE\n    default n\n    help\n        Enable an additional option for Hello Module.\n</code></pre></div>\n<ol start=\"2\">\n<li>Add module information to the top-level Kconfig (<code class=\"language-text\">drivers/Kconfig</code>). Open the file</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">nano $<span class=\"token constant\">KERNEL_SRC</span><span class=\"token operator\">/</span>drivers<span class=\"token operator\">/</span>Kconfig</code></pre></div>\n<ol start=\"3\">\n<li>and add an <code class=\"language-text\">source</code> entry pointing to your module's Kconfig file.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\">source <span class=\"token string\">\"drivers/hello/Kconfig\"</span>\n</code></pre></div>\n<p>A simple <code class=\"language-text\">hello.c</code> kernel module that prints a message to the kernel log using <code class=\"language-text\">printk</code> at log level 3:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/init.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/module.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/kernel.h></span></span>\n\n<span class=\"token function\">MODULE_LICENSE</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GPL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">MODULE_AUTHOR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your Name\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">MODULE_DESCRIPTION</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A simple hello world kernel module\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> __init <span class=\"token function\">hello_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span>KERN_INFO <span class=\"token string\">\"Hello, world!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> __exit <span class=\"token function\">hello_exit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span>KERN_INFO <span class=\"token string\">\"Goodbye, world!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">module_init</span><span class=\"token punctuation\">(</span>hello_init<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">module_exit</span><span class=\"token punctuation\">(</span>hello_exit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code class=\"language-text\">module_init</code> and <code class=\"language-text\">module_exit</code> macros are used to specify the module initialization and cleanup function accordingly (<code class=\"language-text\">hello_init</code>, <code class=\"language-text\">hello_exit</code>).</p>\n<p>Makefile for building the <code class=\"language-text\">hello.c</code> kernel module, <code class=\"language-text\">hello.mk</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\">obj-m <span class=\"token operator\">+=</span> hello.o\n\nKERNELDIR <span class=\"token operator\">?=</span> /lib/modules/<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">shell</span> uname -r<span class=\"token punctuation\">)</span>/build\nPWD <span class=\"token operator\">:=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token function\">shell</span> pwd<span class=\"token punctuation\">)</span>\n\n<span class=\"token target symbol\">default</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MAKE<span class=\"token punctuation\">)</span> -C <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>KERNELDIR<span class=\"token punctuation\">)</span> M<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>PWD<span class=\"token punctuation\">)</span> modules\n\n<span class=\"token target symbol\">clean</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MAKE<span class=\"token punctuation\">)</span> -C <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>KERNELDIR<span class=\"token punctuation\">)</span> M<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>PWD<span class=\"token punctuation\">)</span> clean</code></pre></div>\n<h2 id=\"what-kernel-modules-can-do\" style=\"position:relative;\">What kernel modules can do?<a href=\"#what-kernel-modules-can-do\" aria-label=\"what kernel modules can do permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li>Device Drivers</li>\n<li>Filesystems</li>\n<li>Network Protocols (such as TCP/IP stack, IP routing protocols (like OSPF or BGP)), network packet filtering (firewalling)</li>\n<li>Virtualization (such as Kernel-based Virtual Machine (KVM), Xen, or containerization technologies like Docker or LXC)</li>\n<li>Security and encryption</li>\n<li>Performance Monitoring</li>\n<li>Debugging and Tracing</li>\n<li>Modify system calls</li>\n<li>Power Management</li>\n</ul>\n<h2 id=\"simple-example-of-kernel-based-virtual-machine-kvm\" style=\"position:relative;\">Simple example of Kernel-based Virtual Machine (KVM)<a href=\"#simple-example-of-kernel-based-virtual-machine-kvm\" aria-label=\"simple example of kernel based virtual machine kvm permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>KVM has the capability to emulate different CPU architectures with their respective instruction sets. For example, we can create a virtual machine with an ARM CPU architecture as the guest, even if the host CPU architecture is x86.</p>\n<hr>\n<p>// to be continued //</p>\n<h2 id=\"reference\" style=\"position:relative;\">Reference<a href=\"#reference\" aria-label=\"reference permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li><a href=\"https://forum.manjaro.org/t/how-to-build-a-kernel-module/74113/4\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://forum.manjaro.org/t/how-to-build-a-kernel-module/74113/4</a></li>\n<li><a href=\"https://docs.legato.io/17_07/yoctoOutofTreeKernelModule.html\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://docs.legato.io/17_07/yoctoOutofTreeKernelModule.html</a></li>\n<li><a href=\"https://ebpf.io/applications/\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">https://ebpf.io/applications/</a></li>\n</ul>","excerpt":"Letâ€™s make a hello-world type Linux kernel module. Get Linux kernel sources First we need to integrate a Makefile, such as hello.mk into theâ€¦","tableOfContents":"<ul>\n<li><a href=\"#get-linux-kernel-sources\">Get Linux kernel sources</a></li>\n<li><a href=\"#add-driver-directory\">Add driver directory</a></li>\n<li><a href=\"#what-kernel-modules-can-do\">What kernel modules can do?</a></li>\n<li><a href=\"#simple-example-of-kernel-based-virtual-machine-kvm\">Simple example of Kernel-based Virtual Machine (KVM)</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/9f658b62-73e4-5bf2-8b98-1a30ca2f705c.jpg"},"frontmatter":{"date":"June 04, 2023","published":"February 23, 2025","lastModified":"February 23, 2025","title":"Linux kernel module","subtitle":"Hello World","section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/linux-kernel-module-hello-world.md","url":"/linux/linux-kernel-module-hello-world","next":{"excerpt":"Boot process Have you ever wondered how inefficient the boot process in our computers? It requires 3 different protocol implementations. Butâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/bootloaders.md","frontmatter":{"title":"Bootloaders","date":"2023-06-14T00:00:00.000Z","topic":null,"article":null},"id":"77481a6c-8285-5018-9028-4a3c8b268fe3"},"previous":{"excerpt":"In one of my custom linux distors I use a read-only version of the Ubuntu operating system. So, a normal install was copied and compressedâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/update-initramfs-ubuntu.md","frontmatter":{"title":"Update initramfs","date":"2023-06-02T00:00:00.000Z","topic":null,"article":null},"id":"7e6878ee-5c9a-5f32-b3e5-2387ad177083"},"recentArticles":[{"excerpt":"The time is now. So you are following the official path","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/lunar-vim.md","frontmatter":{"title":"Lunar Vim","date":"2025-07-12T00:00:00.000Z","topic":null,"article":null},"id":"96fd1359-d24f-593f-bfd5-c6ea877b7e1e"},{"excerpt":"Prologue When I changed my email with Asana, the service that I liked so much, I found it when I had trouble planning my day, forgivingâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/task-management-with-taskwarrior.md","frontmatter":{"title":"Task management with taskwarrior","date":"2025-06-19T00:00:00.000Z","topic":null,"article":null},"id":"d251091d-7777-5f57-a398-6317d95233da"},{"excerpt":"I called my pool 'dinosaur' and three datasets, you guessed it, triassic, jurassic, cretaceous Steps: Reference archwiki - zfs zfs handbookâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/encrypted-backup-with-zfs.md","frontmatter":{"title":"Encrypted backup with ZFS","date":"2025-06-10T00:00:00.000Z","topic":null,"article":null},"id":"a8cfe7c2-1870-5a4d-a4b6-a9e5cb56f73b"},{"excerpt":"I already got used to auto-starting services when they run with docker compose or docker stack, but I like it even more when the apps runâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/autostart-everything.md","frontmatter":{"title":"Autostart everything","date":"2025-05-26T00:00:00.000Z","topic":null,"article":null},"id":"7c1cd1ea-fc7f-558a-9576-5f5420866bad"},{"excerpt":"So this happened when I was working on a Go project and quite frequently compiled binaries for deployment in docker containers. I didn't payâ€¦","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/clear-space.md","frontmatter":{"title":"Clear space on Linux","date":"2025-04-15T00:00:00.000Z","topic":null,"article":null},"id":"b3347ef2-f534-5c29-bc5e-0ed82ca4c7ee"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}