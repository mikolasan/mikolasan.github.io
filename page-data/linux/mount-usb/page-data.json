{"componentChunkName":"component---src-templates-blog-template-js","path":"/linux/mount-usb","result":{"data":{"markdownRemark":{"html":"<p>Most likely that this case is very specific and not everyone will find it useful as it is, but this example can show what interesting subsystems do exist in Linux operating systems and how one can approach to automatic execution of scripts.</p>\n<h2 id=\"original-bash-script\" style=\"position:relative;\">Original bash script<a href=\"#original-bash-script\" aria-label=\"original bash script permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>For example, in this very specific case, we look for one USB flash drive that is connected, then check if we are want to mount it by checking for hidden information on the drive, then actually mount the first partition, and that's it. So this is not about automatically mount USB drives, but quite the oppsite, we want to avoid any untrusted USB drives.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-x</span>\n\n<span class=\"token assign-left variable\">USB_DEVICE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>lsblk <span class=\"token parameter variable\">-o</span> NAME,TRAN <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> usb <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{ print $1 }'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">USB_DEVICE_PATH</span><span class=\"token operator\">=</span>/dev/<span class=\"token variable\">${USB_DEVICE}</span>\n\n<span class=\"token assign-left variable\">MOUNT_PATH</span><span class=\"token operator\">=</span>/mnt\n<span class=\"token assign-left variable\">UTIL_DIR</span><span class=\"token operator\">=</span>/etc\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">${USB_DEVICE_PATH}</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"No USB device\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"USB device found (<span class=\"token variable\">${USB_DEVICE_PATH}</span>)\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token function\">sudo</span> <span class=\"token function\">dd</span> <span class=\"token assign-left variable\">if</span><span class=\"token operator\">=</span><span class=\"token variable\">$USB_DEVICE_PATH</span> <span class=\"token assign-left variable\">bs</span><span class=\"token operator\">=</span><span class=\"token number\">512</span> <span class=\"token assign-left variable\">skip</span><span class=\"token operator\">=</span><span class=\"token number\">2044</span> <span class=\"token assign-left variable\">count</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">|</span> <span class=\"token function\">cmp</span> <span class=\"token parameter variable\">-s</span> - <span class=\"token variable\">$UTIL_DIR</span>/usb_drive.sign<span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Signature is correct\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Wrong signature\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> <span class=\"token variable\">$MOUNT_PATH</span>\n\n<span class=\"token assign-left variable\">MOUNT_POINT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>lsblk <span class=\"token parameter variable\">-o</span> NAME,MOUNTPOINTS <span class=\"token parameter variable\">-l</span> <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> $<span class=\"token punctuation\">{</span>USB_DEVICE<span class=\"token punctuation\">}</span><span class=\"token number\">1</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">' '</span> <span class=\"token string\">'{print $2}'</span><span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"<span class=\"token variable\">$MOUNT_POINT</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">sudo</span> <span class=\"token function\">mount</span> <span class=\"token variable\">${USB_DEVICE_PATH}</span><span class=\"token number\">1</span> <span class=\"token variable\">$MOUNT_PATH</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Mount failed\"</span>\n        <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">elif</span> <span class=\"token function\">sudo</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"<span class=\"token variable\">$MOUNT_POINT</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Already mounted\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Done\"</span></code></pre></div>\n<p>If you run that script manually, then it will work as intended. All those hours of hard work were truly fruitful. Right?</p>\n<h2 id=\"mount-with-udev-rules\" style=\"position:relative;\">mount with udev rules<a href=\"#mount-with-udev-rules\" aria-label=\"mount with udev rules permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>Now, to automate this process, we create an udev rule <strong>/etc/udev/rules.d/90-smart-usb-mount.rules</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ACTION==\"add\", SUBSYSTEMS==\"usb\", SUBSYSTEM==\"block\", KERNEL==\"sd[b-z][0-9]\", RUN+=\"/etc/smart_usb_mount.sh\"</code></pre></div>\n<p>But it would fail on the <code class=\"language-text\">mount</code> command because <strong>udev</strong> cannot mount devices. Not directly but it can call <code class=\"language-text\">systemd-mount</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ACTION==\"add\", SUBSYSTEMS==\"usb\", SUBSYSTEM==\"block\", ENV{ID_FS_USAGE}==\"filesystem\", RUN{program}+=\"/usr/bin/systemd-mount --no-block --automount=yes --collect $devnode /mnt\"</code></pre></div>\n<p>(of course we update rules after the change)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> udevadm control --reload-rules</code></pre></div>\n<p>(and to see rules in action we can temporarily change log level for udev)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> udevadm control --log-priority<span class=\"token operator\">=</span>debug\n<span class=\"token function\">sudo</span> journalctl <span class=\"token parameter variable\">-f</span></code></pre></div>\n<h2 id=\"mount-from-systemd-service\" style=\"position:relative;\">mount from systemd service<a href=\"#mount-from-systemd-service\" aria-label=\"mount from systemd service permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<p>Let's use a systemd service because systemd can mount devices and trigger other services after.</p>\n<p>So we define a systemd unit (in <strong>/etc/systemd/system/smart-usb-mount.service</strong>)</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Description</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">Smart USB mount</span>\n<span class=\"token key attr-name\">After</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">mnt.automount</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Type</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">forking</span>\n<span class=\"token key attr-name\">ExecStart</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/etc/smart_usb_mount.sh</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">WantedBy</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">multi-user.target</span></code></pre></div>\n<p>enable the new service</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> smart-usb-mount</code></pre></div>\n<h2 id=\"reference\" style=\"position:relative;\">Reference<a href=\"#reference\" aria-label=\"reference permalink\" class=\"with-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\">\n                <path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3\n                3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3\n                  9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64\n                  1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\">\n                </path>\n                </svg></a></h2>\n<ul>\n<li><a href=\"https://wiki.archlinux.org/title/Udev#Mounting_drives_in_rules\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Udev tips and tricks</a></li>\n<li><a href=\"https://unix.stackexchange.com/questions/217265/udevudisks2-udisksctl-gives-error-looking-up-object-for-device\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">udisksctl and udev</a> are not friends (and the <code class=\"language-text\">mount</code> from udev <a href=\"https://unix.stackexchange.com/questions/612877/mount-a-usb-disk-with-udev-permission-denied\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">too</a>, use systemd instead)</li>\n<li><a href=\"https://github.com/systemd/systemd/issues/11982#issuecomment-472529566\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Mount with systemd</a></li>\n</ul>","excerpt":"Most likely that this case is very specific and not everyone will find it useful as it is, but this example can show what interesting…","tableOfContents":"<ul>\n<li><a href=\"#original-bash-script\">Original bash script</a></li>\n<li><a href=\"#mount-with-udev-rules\">mount with udev rules</a></li>\n<li><a href=\"#mount-from-systemd-service\">mount from systemd service</a></li>\n<li><a href=\"#reference\">Reference</a></li>\n</ul>","fields":{"socialcard":"gatsby-plugin-social-card/404c5233-7cb6-53a4-9a81-f2e1ce5e8383.jpg"},"frontmatter":{"date":"November 05, 2024","published":"November 05, 2024","lastModified":"November 05, 2024","title":"Mount a USB","subtitle":null,"section":null,"draft":null,"developing":null,"buttonText":null,"buttonLink":null,"secondButtonText":null,"secondButtonLink":null,"featuredImage":null}}},"pageContext":{"showLikes":true,"absolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/mount-usb.md","url":"/linux/mount-usb","next":{"excerpt":"Kernel patch https://github.com/erstrom/linux-ath/wiki/Firmware This patch series adds usb support to ath10k: maillist weib git ath.git…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/linksys-wusb6100m-wifi-adapter.md","frontmatter":{"title":"Fast internet on an ancient laptop (2008)","date":"2025-02-24T00:00:00.000Z","topic":null,"article":null},"id":"95d14ba3-dff8-53bf-b436-9585eb341cf6"},"previous":{"excerpt":"If one needs to serve static files evenly fast to any device in the world then they are probably thinking about CDN. Plan create S3 bucket…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/cdn-on-aws.md","frontmatter":{"title":"CDN on AWS","date":"2024-10-23T00:00:00.000Z","topic":null,"article":null},"id":"0bc398d7-2e4c-5bcf-8b18-cd002d918d22"},"recentArticles":[{"excerpt":"The time is now. So you are following the official path","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/lunar-vim.md","frontmatter":{"title":"Lunar Vim","date":"2025-07-12T00:00:00.000Z","topic":null,"article":null},"id":"96fd1359-d24f-593f-bfd5-c6ea877b7e1e"},{"excerpt":"Prologue When I changed my email with Asana, the service that I liked so much, I found it when I had trouble planning my day, forgiving…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/task-management-with-taskwarrior.md","frontmatter":{"title":"Task management with taskwarrior","date":"2025-06-19T00:00:00.000Z","topic":null,"article":null},"id":"d251091d-7777-5f57-a398-6317d95233da"},{"excerpt":"I called my pool 'dinosaur' and three datasets, you guessed it, triassic, jurassic, cretaceous Steps: Reference archwiki - zfs zfs handbook…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/encrypted-backup-with-zfs.md","frontmatter":{"title":"Encrypted backup with ZFS","date":"2025-06-10T00:00:00.000Z","topic":null,"article":null},"id":"a8cfe7c2-1870-5a4d-a4b6-a9e5cb56f73b"},{"excerpt":"I already got used to auto-starting services when they run with docker compose or docker stack, but I like it even more when the apps run…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/autostart-everything.md","frontmatter":{"title":"Autostart everything","date":"2025-05-26T00:00:00.000Z","topic":null,"article":null},"id":"7c1cd1ea-fc7f-558a-9576-5f5420866bad"},{"excerpt":"So this happened when I was working on a Go project and quite frequently compiled binaries for deployment in docker containers. I didn't pay…","fileAbsolutePath":"/home/runner/work/mikolasan.github.io/mikolasan.github.io/src/markdown/linux/clear-space.md","frontmatter":{"title":"Clear space on Linux","date":"2025-04-15T00:00:00.000Z","topic":null,"article":null},"id":"b3347ef2-f534-5c29-bc5e-0ed82ca4c7ee"}]}},"staticQueryHashes":["2961657013","447685113"],"slicesMap":{}}