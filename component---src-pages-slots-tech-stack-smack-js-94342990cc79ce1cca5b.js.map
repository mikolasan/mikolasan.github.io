{"version":3,"file":"component---src-pages-slots-tech-stack-smack-js-94342990cc79ce1cca5b.js","mappings":"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","sources":["webpack://gatsby-mikolasan-blog/./src/components/layoutBase.js","webpack://gatsby-mikolasan-blog/./src/components/layout.js","webpack://gatsby-mikolasan-blog/./src/components/slots/interface.js","webpack://gatsby-mikolasan-blog/./src/components/slots/tech-reels.js","webpack://gatsby-mikolasan-blog/./src/pages/slots/tech-stack-smack.js","webpack://gatsby-mikolasan-blog/./src/components/slots/index.module.css"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getImage, getSrc } from \"gatsby-plugin-image\"\n\nimport Banner from \"../components/banner\"\nimport FeaturedImage from \"../components/featuredImage\"\nimport MainBase from \"./mainBase\"\nimport MenuPopup from \"./menuPopup\"\nimport Footer from \"./footerBase\"\nimport Header from \"./header\"\nimport Search from \"./allPagesSearch\"\n\nclass LayoutBase extends React.Component {\n  constructor(props) {\n    super(props)\n    this.errorCallback = this.errorCallback.bind(this)\n    this.menuClicked = this.menuClicked.bind(this)\n    this.closeCallback = this.closeMenu.bind(this)\n    this.searchClicked = this.searchClicked.bind(this)\n    this.state = {\n      menuOpen: false,\n      searchOpen: false,\n      errorMessage: \"\"\n    }\n  }\n\n  errorCallback(errorMessage) {\n    this.setState({\n      errorMessage: errorMessage\n    })\n  }\n  \n  menuClicked() {\n    this.setState({\n      menuOpen: !this.state.menuOpen,\n      searchOpen: false\n    })\n  }\n\n  openMenu() {\n    this.setState({ menuOpen: true })\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false })\n  }\n\n  searchClicked() {\n    if (this.state.menuOpen) return\n\n    this.setState({ searchOpen: !this.state.searchOpen})\n  }\n\n  render() {\n    const {\n      children,\n      title,\n      published,\n      publishedText,\n      lastUpdated,\n      updatedText,\n      section,\n      subsection,\n      buttonText,\n      buttonLink,\n      secondButtonText,\n      secondButtonLink,\n      featuredImage,\n      bannerParagraph,\n      mainConf,\n      languageName\n    } = this.props\n    \n    const imageData = getImage(featuredImage);\n    const imageSrc = getSrc(featuredImage);\n\n    const wideImage = (\n      <FeaturedImage\n        image={imageData}\n        title={title}\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        lastUpdated={lastUpdated}\n      >\n        {bannerParagraph}\n      </FeaturedImage>\n    )\n\n    const banner = bannerParagraph && (\n      <Banner\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        publishedText={publishedText}\n        lastUpdated={lastUpdated}\n        updatedText={updatedText}\n      >\n        {bannerParagraph}\n      </Banner>\n    ) || ``\n\n    const header = (\n      <Header\n        section={section}\n        subsection={subsection}\n        language={languageName}\n        menuOpen={this.state.menuOpen}\n        menuClickedCallback={this.menuClicked}\n        searchOpen={this.state.searchOpen}\n        searchClickedCallback={this.searchClicked}\n      />\n    )\n\n    const fullscreenMenu = (\n      <>\n        {header}\n        <MenuPopup\n          language={languageName}\n          closeCallback={this.closeCallback}\n        />\n      </>\n    )\n\n    const fullPage = (\n      <div className={\"language-\" + languageName}>\n        {header}\n        {this.state.searchOpen && (\n          <div className=\"searchline\">\n            <Search />\n          </div>\n        )}\n        {featuredImage && wideImage || banner}\n        <MainBase\n          mainConf={mainConf}\n          errorCallback={this.errorCallback}\n          errorMessage={this.state.errorMessage}\n          {...this.props}\n        >\n          {children}\n        </MainBase>\n        <Footer language={languageName} />\n      </div>\n    )\n\n    const isMenuOpen = this.state.menuOpen\n    const currentLayout = isMenuOpen && fullscreenMenu || fullPage\n    return currentLayout\n  }\n}\n\nLayoutBase.propTypes = {\n  children: PropTypes.node.isRequired,\n  languageName: PropTypes.string.isRequired,\n  publishedText: PropTypes.string.isRequired,\n  updatedText: PropTypes.string.isRequired,\n}\n\nexport default LayoutBase\n","import React from \"react\"\nimport LayoutBase from \"./layoutBase\"\nimport LayoutNavigation from \"./layoutNavigation\"\n\nexport default function Layout(props) {\n  switch (props.mainConf) {\n  case \"navigation\":\n    return (\n      <LayoutNavigation\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  default:\n    return (\n      <LayoutBase\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  }\n}","\nlet balance = 1000;\nconst max_bet_per_line = 20;\nlet bet_per_line = 10;\nconst n_lines = 10;\nlet total_bet = bet_per_line * n_lines;\nlet win = 0;\n\nfunction init_interface() {\n  update_all_labels();\n}\n\nfunction on_bet_plus_clicked() {\n  bet_per_line += 1;\n  if (bet_per_line > max_bet_per_line) {\n    bet_per_line = max_bet_per_line;\n  }\n  total_bet = bet_per_line * n_lines;\n  update_bet_label();\n  update_total_bet_label();\n}\n\nfunction on_bet_minus_clicked() {\n  bet_per_line -= 1;\n  if (bet_per_line < 1) {\n    bet_per_line = 1;\n  }\n  total_bet = bet_per_line * n_lines;\n  update_bet_label();\n  update_total_bet_label();\n}\n\nfunction on_spin_started() {\n  balance -= total_bet;\n  win = 0;\n  update_win_label()\n  update_balance_label();\n}\n\nfunction on_winning_result(total_win, text_result) {\n  win = total_win * bet_per_line;\n  balance += win;\n  update_win_label();\n  update_balance_label();\n  update_result_label(text_result);\n}\n\nfunction update_balance_label() {\n  const element = document.getElementById('balance');\n  if (!element) return;\n  element.innerHTML = `Balance: ${balance}`;\n}\n\nfunction update_bet_label() {\n  const element = document.getElementById('bet_per_line');\n  if (!element) return;\n  element.innerHTML = `Bet per line: ${bet_per_line}`;\n}\n\nfunction update_total_bet_label() {\n  const element = document.getElementById('total_bet');\n  if (!element) return;\n  element.innerHTML = `Total bet: ${total_bet}`;\n}\n\nfunction update_win_label() {\n  const element = document.getElementById('win');\n  if (!element) return;\n  element.innerHTML = text_result;\n}\n\nfunction update_result_label(text_result) {\n  const element = document.getElementById('slot-machine-result');\n  if (!element) return;\n  element.innerHTML = text_result;\n}\n\nfunction update_all_labels() {\n  update_balance_label();\n  update_bet_label();\n  update_total_bet_label();\n  update_win_label();\n}\n\nexport { init_interface, on_spin_started, on_winning_result };","import { on_spin_started, on_winning_result } from \"./interface\"\n\nconst slot_width = 128;\nconst slot_height = 128;\n\nconst n_reels = 5;\nconst n_rows = 3;\nconst invisible_rows = 1; // add these rows to the top and bottom of the reels\nconst shift_x = 67;\nconst shift_y = 271;\nconst reel_gap = 7;\n// const width = slot_width * n_reels + reel_gap * (n_reels - 1) + shift_x * 2;\n// const height = slot_height * n_rows + shift_y * 2;\nlet width;\nlet height;\n\n// backends\nconst PY = 'PY';\nconst RB = 'RB';\nconst SC = 'SC';\nconst RU = 'RU';\nconst GO = 'GO';\nconst JS = 'JS';\nconst CC = 'CC';\nconst JA = 'JA';\n// frontends\nconst RE = 'RE';\nconst NG = 'NG';\nconst VU = 'VU';\nconst NE = 'NE';\nconst QT = 'QT';\nconst AN = 'AN';\nconst IO = 'IO';\n// protocols\nconst HT = 'HT';\nconst US = 'US';\nconst MI = 'MI';\nconst PR = 'PR';\nconst IR = 'IR';\nconst XM = 'XM';\n// databases\nconst MO = 'MO';\nconst PO = 'PO';\nconst QL = 'QL';\nconst KA = 'KA';\nconst CA = 'CA';\nconst HA = 'HA';\n// features\nconst OA = 'OA';\nconst BL = 'BL';\nconst CV = 'CV';\nconst ML = 'ML';\nconst DA = 'DA';\nconst LP = 'LP';\nconst IT = 'IT';\nconst MS = 'MS';\n\nconst TW = 'TW';\nconst MA = 'MA';\nconst BS = 'BS';\nconst FO = 'FO';\nconst SV = 'SV';\nconst JQ = 'JQ';\nconst SO = 'SO';\nconst CS = 'CS';\nconst PH = 'PH';\nconst RS = 'RS';\nconst MY = 'MY';\nconst SQ = 'SQ';\nconst RD = 'RD';\n\nconst symbol_names = new Map([\n  [GO, 'Go'],\n  [JS, 'NodeJS'],\n  [CC, 'C++'],\n  [JA, 'Java'],\n  [RU, 'Rust'],\n  [SC, 'Scala'],\n  [PY, 'Python'],\n  [RB, 'Ruby'],\n  [RE, 'ReactJS'],\n  [NG, 'Angular'],\n  [VU, 'Vue.js'],\n  [NE, '.NET'],\n  [QT, 'Qt'],\n  [AN, 'Android'],\n  [IO, 'iOS'],\n  [MO, 'MongoDB'],\n  [PO, 'PostgreSQL'],\n  [QL, 'GraphQL'],\n  [KA, 'Kafka'],\n  [CA, 'Cassandra'],\n  [HA, 'Hadoop'],\n  [HT, 'http'],\n  [US, 'USB'],\n  [MI, 'MIDI'],\n  [PR, 'protobuf'],\n  [IR, 'irc'],\n  [XM, 'XMPP'],\n  [OA, 'OAuth'],\n  [BL, 'Blockchain'],\n  [CV, 'OpenCV (computer vision)'],\n  [ML, 'Machine Learning'],\n  [DA, 'Dashboard'],\n  [LP, 'OpenNLP, NLTK (natural language processing)'],\n  [IT, 'Internet of Things'],\n  [MS, 'Seneca (Microservices)'],\n  \n  [TW, 'Tailwind'],\n  [MA, 'Material'],\n  [BS, 'Bootstrap'],\n  [FO, 'Foundation'],\n  [SV, 'Svelte'],\n  [JQ, 'jQuery'],\n  [SO, 'Solidity'],\n  [CS, 'C#'],\n  [PH, 'PHP'],\n  [RS, 'REST API'],\n  [MY, 'MySQL'],\n  [SQ, 'Microsoft SQL Server'],\n  [RD, 'Redis'],\n]);\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#getting_a_random_integer_between_two_values_inclusive\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction shuffle(array) {\n  let {length} = array;\n  while (length--) {\n    const i = getRandomIntInclusive(0, length);\n    [array[i], array[length]] = [array[length], array[i]];\n  }\n  return array;\n}\n\nconst choose_5 = [TW, MA, BS, FO, RE, VU, SV, NG, JQ, JS, PY, SO, CS, JA, PH, RB, QL, RS, MY, SQ, MO, RD];\nconst strips = [\n  shuffle(choose_5),\n  shuffle(choose_5),\n  shuffle(choose_5),\n  shuffle(choose_5),\n  shuffle(choose_5),\n]\n\n// const strips = [\n//   [CC, JS, GO, JA, CC, CC, RB, JS, RU, CC, JA, SC, PY, RU, RB],\n//   [RE, RE, RE, NG, VU, NE, QT, NG, AN, IO, VU, QT],\n//   [MO, PO, PO, PO, QL, HA, KA, MO, QL, CA],\n//   [HT, US, IR, XM, PR, MI, HT, PR],\n//   [DA, BL, MS, ML, BL, BL, CV, OA, BL, DA, OA, IT, LP],\n// ];\n\n// 0 3 6 9  12\n// 1 4 7 10 13\n// 2 5 8 11 14\nconst lines = [\n  [1,4,7,10,13],\n  // [0,4,8,10,12],\n  // [2,4,6,10,14]\n];\n\nconst spin_button = {\n  x: 342,\n  y: 727,\n  a: 53,\n  b: 52,\n  enabled: true,\n  clicked: false,\n  mouse: 'out',\n}\n\nlet slot_images = new Map();\n\nconst y = 0;\n\nconst reels = [];\nreels.length = n_reels;\nconst reel_speed = 1;\nconst reel_positions = [];\nreel_positions.length = n_reels;\nconst reel_position_offsets = [];\nreel_position_offsets.length = n_reels;\nconst start_position = 0;\nconst start_offset = invisible_rows * slot_height;\nconst slots_per_spin = 5; // must be >= n_rows\nconst total_distance = (slots_per_spin + invisible_rows) * slot_height;\nlet t_spinning = 0;\nlet t_stopping = 0;\nconst fps = 60.0;\n// dt = 1/60 = 0.016 sec = 16 ms\nconst spin_duration = 1500; // msec\nlet k = 0;\nconst n_draw_calls = (spin_duration / 1000) * fps;\nconst accumulated_t = (n_draw_calls / 2) * (n_draw_calls - 1) * (1 / fps); // =  n_draw_calls - 1\n//const k = 0.005;\nlet showtime = 0\n// accumulated_t = max_t\n// dt = k\n// k = max_t * dt / accumulated_t\n\nconst n_slots_spinned = [];\nn_slots_spinned.length = n_reels;\nlet n_reels_stopped = 0;\nlet t = 0;\nlet max_t = 0;\nlet result = null;\n\n// my beautiful state machine\nconst state_idle = {\n  on_enter: function() {\n    \n  },\n  on_leave: function() {\n\n  }\n};\n\nfunction move_func_inv(x) {\n  return Math.sqrt(2 * x);\n}\n\nconst state_spinning = {\n  on_enter: function() {\n    reel_positions.fill(start_position);\n    reel_position_offsets.fill(start_offset);\n    t = 0;\n    max_t = move_func_inv(total_distance);\n    t_spinning = max_t;\n    t_stopping = t_spinning * 2;\n    k = (max_t / accumulated_t) * (1 / fps) ;\n    //console.log(\"max_t\", max_t, k, t_spinning, t_stopping);\n    n_slots_spinned.fill(0);\n    n_reels_stopped = 0;\n    const symbols = random_result_symbols();\n    console.log(\"result symbols\", symbols);\n    set_result_symbols(symbols);\n    on_spin_started();\n  },\n  on_leave: function(next_state) {\n\n  }\n};\n\nconst state_stopping = {\n  on_enter: function() {\n\n  },\n  on_leave: function(next_state) {\n\n  }\n};\n\nconst state_winning = {\n  on_enter: function() {\n    showtime = 0;\n    this.current_animating_line = 0;\n  },\n  on_leave: function() {\n\n  },\n  win: 0,\n  animating_slots: [],\n  //current_animating_line: 0\n};\n\nlet current_state = state_idle;\n\nfunction switch_state(s1, s2) {\n  s1.on_leave(s2);\n  current_state = s2;\n  s2.on_enter();\n}\n\nfunction random_virtual_stop(reel_id) {\n  const strip = strips[reel_id];\n  return Math.floor(Math.random() * strip.length);\n}\n\nfunction get_strip_symbol(reel_id, offset) {\n  const strip = strips[reel_id];\n  return strip[offset % strip.length];\n}\n\nfunction random_result_symbols() {\n  const symbols = [];\n  for (let reel_id = 0; reel_id < n_reels; ++reel_id) {\n    const virtual_stop = random_virtual_stop(reel_id);\n    for (let slot_id = 0; slot_id < n_rows; ++slot_id) {\n      symbols[reel_id * n_rows + slot_id] = get_strip_symbol(reel_id, virtual_stop + slot_id);\n    }\n  }\n  return symbols;\n}\n\nfunction set_result_symbols(symbols) {\n  result = symbols;\n}\n\nfunction random_symbol(reel_id) {\n  return get_strip_symbol(reel_id, random_virtual_stop(reel_id));\n}\n\nfunction get_slot_image(symbol_id) {\n  return slot_images.get(symbol_id)[1];\n}\n\nfunction random_slot_image(reel_id) {\n  return get_slot_image(random_symbol(reel_id));\n}\n\nfunction init_reel(reel_id) {\n  reels[reel_id] = [];\n  // add invisible rows to the top and bottom of each reel\n  for (let i = 0; i < n_rows + 2 * invisible_rows; ++i) {\n    reels[reel_id].push(random_slot_image(reel_id));\n  }\n}\n\nfunction force_stop() {\n  for (let reel_id = 0; reel_id < n_reels; ++reel_id) {\n    reel_positions[reel_id] = start_position;\n    reel_position_offsets[reel_id] = start_offset;\n    for (let slot_id = 0; slot_id < n_rows; ++slot_id) {\n      const id = reel_id * n_rows + slot_id;\n      reels[reel_id][slot_id + 1] = get_slot_image(result[id]);\n    }\n  }\n  on_reels_stopped();\n}\n\n\nfunction on_reel_stopped() {\n  n_reels_stopped += 1;\n  if (n_reels_stopped == n_reels) {\n    on_reels_stopped();\n  }\n}\n\nfunction on_reels_stopped() {\n  const {win, animating_slots, text_result} = parse_result();\n  if (animating_slots.length > 0) {\n    switch_state(current_state, state_winning);\n    state_winning.win = win;\n    state_winning.animating_slots = animating_slots;\n    on_winning_result(win, text_result);\n  } else {\n    switch_state(current_state, state_idle);\n    on_winning_result(0, \"Nothing\");\n  }\n}\n\nfunction parse_line(line_id) {\n  const l = lines[line_id];\n  const first = result[l[0]];\n  let x_times = 1;\n  let slots = [l[0]];\n  for (let reel_id = 1; reel_id < n_reels; ++reel_id) {\n    const symbol = result[l[reel_id]];\n    if (first == symbol) {\n      x_times += 1;\n      slots.push(l[reel_id]);\n    } else {\n      break;\n    }\n  }\n  const win = 0;\n  if (win == 0) slots = undefined;\n  return {line_win: win, slots: slots};\n}\n\nfunction parse_result() {\n  const win = 0;\n  let text_result = ''\n  const reel_name = ['Backend', 'Frontend', 'DB', 'Protocol', 'Killer Feature']\n  for (let i = 0; i < lines.length; ++ i) {\n    // text_result += `<h3>Idea ${i+1}</h3>\n    text_result += `<p><ul>`\n    for (let reel_id = 0; reel_id < n_reels; ++reel_id) {\n      // text_result += `<li key=${reel_id}>${reel_name[reel_id]}: ${symbol_names.get(result[lines[i][reel_id]])}</li>`\n      text_result += `<li key=${reel_id}>${symbol_names.get(result[lines[i][reel_id]])}</li>`\n    }\n    text_result += '</ul></p>'\n  }\n  return {win: win, animating_slots: lines, text_result: text_result};\n}\n\nfunction generate_next_symbol(reel_id) {\n  reels[reel_id].pop();\n  //console.log(n_slots_spinned[reel_id]  > 2 * slots_per_spin + 1 - n_rows, n_slots_spinned[reel_id], slots_per_spin, n_rows);\n  if (n_slots_spinned[reel_id] > 2 * slots_per_spin + 1 - n_rows && 2 * slots_per_spin - n_slots_spinned[reel_id]  + 1 >= 0) {\n    const i = 2 * slots_per_spin - n_slots_spinned[reel_id]  + 1; // n_rows - (n_slots_spinned[reel_id] - (2 * slots_per_spin + 1 - n_rows));\n    const slot_image = get_slot_image(result[reel_id * n_rows + i]);\n    //console.log(\"take result image\", reel_id, i, result[reel_id * n_rows + i]);\n    reels[reel_id].unshift(slot_image);\n  } else {\n    //console.log(\"pick random image\", reel_id);\n    const slot_image = random_slot_image(reel_id);\n    reels[reel_id].unshift(slot_image);\n  }\n}\n\nlet t1 = 0;\n\nfunction move_func(x) {\n  return Math.pow(x, 2) / 2;\n}\n\nfunction move_reel(reel_id, dt, next_symbol_callback) {\n  if (current_state === state_idle) return;\n  if (current_state === state_winning) return;\n  t += dt * k;\n  if (t > t_stopping && n_slots_spinned[reel_id] == 12) {\n    //console.log(\"move_reel stop->idle\", reel_id, t, t_stopping, n_slots_spinned[reel_id], reel_positions[reel_id]);\n    on_reel_stopped();\n    return;\n  } else if (current_state === state_spinning && t > t_spinning) {\n    switch_state(current_state, state_stopping);\n  }\n\n  if (current_state === state_spinning) {\n    t1 = t;\n    reel_positions[reel_id] = move_func(t);\n    if (reel_positions[reel_id] - reel_position_offsets[reel_id] >= slot_height - start_offset) {\n      n_slots_spinned[reel_id] += 1;\n      next_symbol_callback(reel_id);\n      reel_position_offsets[reel_id] += slot_height;\n    }\n  } else if (current_state === state_stopping) {\n    if (t > t_stopping) {\n      reel_positions[reel_id] += 1;\n      if (reel_positions[reel_id] > reel_position_offsets[reel_id]) {\n        reel_positions[reel_id] = reel_position_offsets[reel_id];\n      }\n    } else {\n      reel_positions[reel_id] = -move_func(t - 2 * t1) + 2 * move_func(t1);\n    }\n    if (reel_positions[reel_id] - reel_position_offsets[reel_id] >= slot_height - start_offset) {\n      n_slots_spinned[reel_id] += 1;\n      next_symbol_callback(reel_id);\n      reel_position_offsets[reel_id] += slot_height;\n    }\n  }\n}\n\nfunction get_reel_draw_coords(reel_id, slot_id) {\n  const x = reel_id * slot_width;\n  const y = (slot_id) * slot_height + reel_positions[reel_id] - reel_position_offsets[reel_id];\n  return {x: x, y: y};\n}\n\nconst one_line_delay = 1000;\nconst spin_highlight_delay = 2500;\nconst spin_highlight = 500;\nlet highlight_time = 0;\n\nfunction show_result(ctx, dt) {\n  showtime += dt;\n  if (Math.floor(showtime / one_line_delay) > state_winning.current_animating_line) {\n    state_winning.current_animating_line += 1;\n    if (state_winning.current_animating_line > state_winning.animating_slots.length) {\n      state_winning.current_animating_line = 0;\n      showtime = 0;\n    }\n  }\n\n  const line = state_winning.current_animating_line;\n  if (line == state_winning.animating_slots.length) {\n    // pause between cycles\n    return;\n  }\n\n  const slots = state_winning.animating_slots[line];\n  ctx.save();\n\n  ctx.strokeStyle = 'rgb(0, 0, 0)';\n  ctx.lineWidth = 6;\n  for (const slot of slots) {\n    const x = Math.floor(slot / n_rows);\n    const y = slot % n_rows;\n    ctx.strokeRect(shift_x + x * slot_width + reel_gap * x, shift_y + y * slot_height, slot_width, slot_height);\n    //ctx.drawImage(frame, x * slot_width, y * slot_height);\n  }\n  ctx.restore();\n}\n\nlet background = null;\nlet last_timestamp = 0;\n\nfunction draw(ctx, timestamp) {\n  const dt = timestamp - last_timestamp;\n  last_timestamp = timestamp;\n  \n  ctx.fillStyle = '#fff'; // background color\n  ctx.fillRect(0, 0, width, height);\n\n  \n  ctx.save();\n  const scale = width / 900;\n  ctx.scale(scale, scale);\n  ctx.drawImage(background, 0, 0);\n\n  ctx.save();\n  // clipping rect\n  ctx.beginPath();\n  ctx.rect(shift_x, shift_y, slot_width * n_reels + reel_gap * (n_reels - 1), slot_height * n_rows);\n  ctx.clip();\n\n  // ctx.font = '30px sans-serif';\n  // ctx.fillStyle = '#000';\n  for (let reel_id = 0; reel_id < n_reels; ++reel_id) {\n    // draw a reel\n    for (let i = 0; i < reels[reel_id].length; ++i) {\n      const {x, y} = get_reel_draw_coords(reel_id, i);\n      ctx.drawImage(reels[reel_id][i], shift_x + x + reel_gap * reel_id, shift_y + y);\n      //ctx.fillText(`y: ${y.toFixed(2)}`, x, y+50);\n    }\n    move_reel(reel_id, dt, generate_next_symbol);\n    \n  }\n  ctx.restore();\n\n  if (current_state == state_winning) {\n    show_result(ctx, dt);\n  }\n  \n  if (!spin_button.enabled) {\n    ctx.drawImage(spin_button.disabled, spin_button.x, spin_button.y)\n  } else if (spin_button.clicked) {\n    ctx.drawImage(spin_button.pressed, spin_button.x, spin_button.y)\n  } else if (spin_button.mouse == 'in') {\n    ctx.drawImage(spin_button.hover, spin_button.x, spin_button.y)\n  } else {\n    highlight_time += dt;\n    if (highlight_time > spin_highlight_delay) {\n      ctx.drawImage(spin_button.highlight, spin_button.x, spin_button.y)\n    } else {\n      ctx.drawImage(spin_button.normal, spin_button.x, spin_button.y)\n    }\n    if (highlight_time > spin_highlight + spin_highlight_delay) {\n      highlight_time -= spin_highlight + spin_highlight_delay;\n    }      \n  }\n  ctx.restore();\n  \n  const drawWrapper = t => draw(ctx, t);\n  window.requestAnimationFrame(drawWrapper);\n}\n\n\n\nfunction spin_stop() {\n  switch (current_state) {\n  case state_idle:\n    console.log(\"was idle, pressed SPIN\"); switch_state(current_state, state_spinning); break;\n  case state_spinning:\n    console.log(\"SPIN while spinning = STOP\"); force_stop(); break;\n  case state_stopping:\n    console.log(\"SPIN while stopping = STOP\"); force_stop(); break;\n  case state_winning:\n    console.log(\"SPIN while winning = BREAK\"); switch_state(current_state, state_spinning); break;\n  default:\n    console.log(`some other state: ${current_state}. How?`)\n  }\n}\n\n// function on_key_down(e) {\n//   var code = e.keyCode;\n//   switch (code) {\n//     case 32: spin_stop(); break; // spacebar\n//   }\n// }\n\n//Function to get the mouse position\nfunction getMousePos(canvas, event) {\n  return {\n    x: event.offsetX,\n    y: event.offsetY\n  };\n}\n\n// window.addEventListener('keydown', on_key_down);\nfunction isInside(pos, btn){\n  const scale = width / 900;\n  const x = (btn.x + btn.a) * scale;\n  const y = (btn.y + btn.b) * scale;\n  const rx = btn.a * scale;\n  const ry = btn.b * scale;\n  return Math.pow(pos.x - x, 2) / Math.pow(rx, 2) \n    + Math.pow(pos.y - y, 2) / Math.pow(ry, 2) <= 1.0;\n}\n\nfunction init_reels() {\n  slot_images = new Map([\n    [GO, ['/images/idea-generator/go.png']],\n    [JS, ['/images/idea-generator/nodejs.png']],\n    [CC, ['/images/idea-generator/cpp.png']],\n    [JA, ['/images/idea-generator/java.png']],\n    [RU, ['/images/idea-generator/rust.png']],\n    [SC, ['/images/idea-generator/scala.png']],\n    [PY, ['/images/idea-generator/python.png']],\n    [RB, ['/images/idea-generator/ruby.png']],\n    [RE, ['/images/idea-generator/reactjs.png']],\n    [NG, ['/images/idea-generator/angular.png']],\n    [VU, ['/images/idea-generator/vuejs.png']],\n    [NE, ['/images/idea-generator/dotnet.png']],\n    [QT, ['/images/idea-generator/qt.png']],\n    [AN, ['/images/idea-generator/android.png']],\n    [IO, ['/images/idea-generator/ios.png']],\n    [MO, ['/images/idea-generator/mongodb.png']],\n    [PO, ['/images/idea-generator/postgresql.png']],\n    [QL, ['/images/idea-generator/graphql.png']],\n    [KA, ['/images/idea-generator/kafka.png']],\n    [CA, ['/images/idea-generator/cassandra.png']],\n    [HA, ['/images/idea-generator/hadoop.png']],\n    [HT, ['/images/idea-generator/http.png']],\n    [US, ['/images/idea-generator/usb.png']],\n    [MI, ['/images/idea-generator/midi.png']],\n    [PR, ['/images/idea-generator/protobuf.png']],\n    [IR, ['/images/idea-generator/irc.png']],\n    [XM, ['/images/idea-generator/xmpp.png']],\n    [OA, ['/images/idea-generator/oauth.png']],\n    [BL, ['/images/idea-generator/blockchain.png']],\n    [CV, ['/images/idea-generator/opencv.png']],\n    [ML, ['/images/idea-generator/ml.png']],\n    [DA, ['/images/idea-generator/dashboard.png']],\n    [LP, ['/images/idea-generator/opennlp.png']],\n    [IT, ['/images/idea-generator/iot.png']],\n    [MS, ['/images/idea-generator/seneca.png']],\n\n    [TW, ['/images/idea-generator/tailwind.png']],\n    [MA, ['/images/idea-generator/material.png']],\n    [BS, ['/images/idea-generator/bootstrap.png']],\n    [FO, ['/images/idea-generator/foundation.png']],\n    [SV, ['/images/idea-generator/svelte.png']],\n    [JQ, ['/images/idea-generator/jquery.png']],\n    [SO, ['/images/idea-generator/solidity.png']],\n    [CS, ['/images/idea-generator/c_sharp.png']],\n    [PH, ['/images/idea-generator/php.png']],\n    [RS, ['/images/idea-generator/rest.png']],\n    [MY, ['/images/idea-generator/mysql.png']],\n    [SQ, ['/images/idea-generator/ms_sql.png']],\n    [RD, ['/images/idea-generator/redis.png']],\n  ]);\n\n  for (const value of slot_images.values()) {\n    value.push(new Image());\n    value[1].src = value[0];\n  }\n  \n  reel_positions.fill(start_position);\n  reel_position_offsets.fill(start_offset);\n  for (let r = 0; r < n_reels; ++r) {\n    init_reel(r);\n  }\n  \n  \n  const canvas = document.getElementById('reels');\n  if (!canvas) {\n    console.error('no canvas')\n    return;\n  }\n\n  canvas.addEventListener('mousemove', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n    if (isInside(mousePos,spin_button)) {\n      spin_button.mouse = 'in'\n    } else {\n      spin_button.mouse = 'out'\n    }\n  }, false);\n  canvas.addEventListener('mousedown', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n    if (isInside(mousePos,spin_button)) {\n      spin_button.clicked = true\n    }\n  }, false);\n  canvas.addEventListener('mouseup', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n    if (isInside(mousePos,spin_button)) {\n      spin_button.clicked = false\n    }\n  }, false);\n  canvas.addEventListener('click', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n    if (isInside(mousePos,spin_button)) {\n      spin_button.clicked = false\n      spin_stop()\n    }\n  }, false);\n\n  spin_button.normal = new Image();\n  spin_button.disabled = new Image();\n  spin_button.hover = new Image();\n  spin_button.pressed = new Image();\n  spin_button.highlight = new Image();\n  spin_button.normal.src = '/images/idea-generator/spin_button.png';\n  spin_button.disabled.src = '/images/idea-generator/spin_button_disabled.png';\n  spin_button.hover.src = '/images/idea-generator/spin_button_hover.png';\n  spin_button.pressed.src = '/images/idea-generator/spin_button_pressed.png';\n  spin_button.highlight.src = '/images/idea-generator/spin_button_highlight.png';\n  \n  background = new Image();\n  background.src = '/images/idea-generator/slot-frame.png';\n\n  if (!canvas.getContext) {\n    console.error('canvas without context')\n    return;\n  }\n\n  const ctx = canvas.getContext('2d');\n  \n  setUpCanvas(canvas);\n  \n  window.addEventListener('resize', () => {\n    console.log('resize');\n    // Clear the canvas.\n    ctx.clearRect(0, 0, ctx.width, ctx.height);\n    // Draw it all again.\n    setUpCanvas(canvas);\n    last_timestamp = 0;\n    draw(ctx, 0);\n  });\n\n  const drawWrapper = timestamp => draw(ctx, timestamp);\n  window.requestAnimationFrame(drawWrapper);\n}\n\nfunction setUpCanvas(canvas) {\n  // const { clientWidth, clientHeight } = canvas.getBoundingClientRect();\n  const ratio = 900/843;\n  canvas.width = canvas.clientWidth;\n  // canvas.height = canvas.clientHeight;\n  canvas.height = canvas.width / ratio\n  width = canvas.width;\n  height = canvas.height;\n}\n\nexport { init_reels };","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport { SEO } from \"../../components/seo\"\nimport { init_interface } from \"../../components/slots/interface\"\nimport { init_reels } from \"../../components/slots/tech-reels\"\nimport * as styles from \"../../components/slots/index.module.css\"\n\nclass TechStackSmack extends React.Component {\n  componentDidMount() {\n    init_reels();\n    init_interface();\n  }\n\n  render() {\n    return (\n      <Layout\n        title=\"Tech Stack Smack\"\n        section=\"slots\"\n      >\n        <p>\n          You can only pick 5.\n          New version based on a tweet from <a href=\"https://twitter.com/chriskalmar/status/1459066591912640529\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">Chis Kalmar</a>\n        </p>\n        <p>\n          Essentially any project has backend, frontend, some storage or database, it uses a protocol and has a killer feature.\n          Each reel in this slot machine represents a part from a typical project.\n          Normally developers like to use the same language across all parts to spend minimum time setting up only one environment.\n        </p>\n\n        \n        \n        <div>\n          <canvas className={styles.slotmachine} id=\"reels\"></canvas>\n          <canvas className={styles.slotmachine} id=\"ui\"></canvas>\n          <h2>The result</h2>\n          <div id=\"slot-machine-result\"><p>No results. Press \"Spin\" to get new ideas.</p></div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default TechStackSmack\n\nexport const Head = ({ location, data, pageContext }) => (\n  <SEO \n    path={location.pathname}\n    data={data}\n    frontmatter={data?.markdownRemark?.frontmatter}\n    pageContext={pageContext}\n    title=\"Tech Stack Smack\"\n  >\n\n  </SEO>\n)","// extracted by mini-css-extract-plugin\nexport var slotmachine = \"index-module--slotmachine--196e2\";"],"names":["_React$Component","LayoutBase","props","_this","call","errorCallback","bind","menuClicked","closeCallback","closeMenu","searchClicked","state","menuOpen","searchOpen","errorMessage","_inheritsLoose","_proto","prototype","this","setState","openMenu","render","children","title","published","publishedText","lastUpdated","updatedText","section","subsection","buttonText","buttonLink","secondButtonText","secondButtonLink","featuredImage","bannerParagraph","mainConf","languageName","imageData","getImage","wideImage","getSrc","React","FeaturedImage","image","banner","Banner","header","Header","language","menuClickedCallback","searchClickedCallback","fullscreenMenu","MenuPopup","fullPage","className","Search","MainBase","Object","assign","Footer","Layout","LayoutNavigation","balance","bet_per_line","total_bet","win","init_interface","update_balance_label","update_bet_label","update_total_bet_label","update_win_label","on_spin_started","on_winning_result","total_win","text_result","element","document","getElementById","innerHTML","update_result_label","slot_width","slot_height","width","height","PY","RB","JS","JA","RE","NG","VU","MO","QL","TW","MA","BS","FO","SV","JQ","SO","CS","PH","RS","MY","SQ","RD","symbol_names","Map","shuffle","array","length","i","min","max","Math","ceil","floor","random","choose_5","strips","lines","spin_button","x","y","a","b","enabled","clicked","mouse","slot_images","reels","reel_positions","reel_position_offsets","start_offset","invisible_rows","t_spinning","t_stopping","k","showtime","n_slots_spinned","n_reels_stopped","t","max_t","result","state_idle","on_enter","on_leave","state_spinning","fill","sqrt","n_draw_calls","symbols","reel_id","virtual_stop","random_virtual_stop","slot_id","get_strip_symbol","random_result_symbols","console","log","set_result_symbols","next_state","state_stopping","state_winning","current_animating_line","animating_slots","current_state","switch_state","s1","s2","strip","offset","get_slot_image","symbol_id","get","random_slot_image","random_symbol","init_reel","n_rows","push","force_stop","id","on_reels_stopped","parse_result","generate_next_symbol","pop","slot_image","unshift","t1","move_func","pow","move_reel","dt","next_symbol_callback","get_reel_draw_coords","spin_highlight_delay","highlight_time","background","last_timestamp","draw","ctx","timestamp","fillStyle","fillRect","save","scale","drawImage","beginPath","rect","clip","restore","line","slots","strokeStyle","lineWidth","slot","strokeRect","show_result","pressed","hover","highlight","normal","spin_highlight","disabled","window","requestAnimationFrame","getMousePos","canvas","event","offsetX","offsetY","isInside","pos","btn","rx","ry","init_reels","value","values","Image","src","r","error","addEventListener","evt","spin_stop","getContext","setUpCanvas","clearRect","clientWidth","TechStackSmack","apply","arguments","componentDidMount","href","target","rel","styles","Head","_ref","_data$markdownRemark","location","data","pageContext","SEO","path","pathname","frontmatter","markdownRemark","slotmachine"],"sourceRoot":""}