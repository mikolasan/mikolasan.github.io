{"version":3,"file":"component---src-pages-ai-js-32eacf5a6f7ff8f47588.js","mappings":"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","sources":["webpack://gatsby-mikolasan-blog/./src/components/layoutBase.js","webpack://gatsby-mikolasan-blog/./src/components/layout.js","webpack://gatsby-mikolasan-blog/./src/components/scrollSplit.js","webpack://gatsby-mikolasan-blog/./src/pages/ai.js","webpack://gatsby-mikolasan-blog/./src/components/postList.module.css"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getImage, getSrc } from \"gatsby-plugin-image\"\n\nimport Banner from \"../components/banner\"\nimport FeaturedImage from \"../components/featuredImage\"\nimport MainBase from \"./mainBase\"\nimport MenuPopup from \"./menuPopup\"\nimport Footer from \"./footerBase\"\nimport Header from \"./header\"\nimport Search from \"./allPagesSearch\"\n\nclass LayoutBase extends React.Component {\n  constructor(props) {\n    super(props)\n    this.errorCallback = this.errorCallback.bind(this)\n    this.menuClicked = this.menuClicked.bind(this)\n    this.closeCallback = this.closeMenu.bind(this)\n    this.searchClicked = this.searchClicked.bind(this)\n    this.state = {\n      menuOpen: false,\n      searchOpen: false,\n      errorMessage: \"\"\n    }\n  }\n\n  errorCallback(errorMessage) {\n    this.setState({\n      errorMessage: errorMessage\n    })\n  }\n  \n  menuClicked() {\n    this.setState({\n      menuOpen: !this.state.menuOpen,\n      searchOpen: false\n    })\n  }\n\n  openMenu() {\n    this.setState({ menuOpen: true })\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false })\n  }\n\n  searchClicked() {\n    if (this.state.menuOpen) return\n\n    this.setState({ searchOpen: !this.state.searchOpen})\n  }\n\n  render() {\n    const {\n      children,\n      title,\n      published,\n      publishedText,\n      lastUpdated,\n      updatedText,\n      section,\n      subsection,\n      buttonText,\n      buttonLink,\n      secondButtonText,\n      secondButtonLink,\n      featuredImage,\n      bannerParagraph,\n      mainConf,\n      languageName\n    } = this.props\n    \n    const imageData = getImage(featuredImage);\n    const imageSrc = getSrc(featuredImage);\n\n    const wideImage = (\n      <FeaturedImage\n        image={imageData}\n        title={title}\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        lastUpdated={lastUpdated}\n      >\n        {bannerParagraph}\n      </FeaturedImage>\n    )\n\n    const banner = bannerParagraph && (\n      <Banner\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        publishedText={publishedText}\n        lastUpdated={lastUpdated}\n        updatedText={updatedText}\n      >\n        {bannerParagraph}\n      </Banner>\n    ) || ``\n\n    const header = (\n      <Header\n        section={section}\n        subsection={subsection}\n        language={languageName}\n        menuOpen={this.state.menuOpen}\n        menuClickedCallback={this.menuClicked}\n        searchOpen={this.state.searchOpen}\n        searchClickedCallback={this.searchClicked}\n      />\n    )\n\n    const fullscreenMenu = (\n      <>\n        {header}\n        <MenuPopup\n          language={languageName}\n          closeCallback={this.closeCallback}\n        />\n      </>\n    )\n\n    const fullPage = (\n      <div className={\"language-\" + languageName}>\n        {header}\n        {this.state.searchOpen && (\n          <div className=\"searchline\">\n            <Search />\n          </div>\n        )}\n        {featuredImage && wideImage || banner}\n        <MainBase\n          mainConf={mainConf}\n          errorCallback={this.errorCallback}\n          errorMessage={this.state.errorMessage}\n          {...this.props}\n        >\n          {children}\n        </MainBase>\n        <Footer language={languageName} />\n      </div>\n    )\n\n    const isMenuOpen = this.state.menuOpen\n    const currentLayout = isMenuOpen && fullscreenMenu || fullPage\n    return currentLayout\n  }\n}\n\nLayoutBase.propTypes = {\n  children: PropTypes.node.isRequired,\n  languageName: PropTypes.string.isRequired,\n  publishedText: PropTypes.string.isRequired,\n  updatedText: PropTypes.string.isRequired,\n}\n\nexport default LayoutBase\n","import React from \"react\"\nimport LayoutBase from \"./layoutBase\"\nimport LayoutNavigation from \"./layoutNavigation\"\n\nexport default function Layout(props) {\n  switch (props.mainConf) {\n  case \"navigation\":\n    return (\n      <LayoutNavigation\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  default:\n    return (\n      <LayoutBase\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  }\n}","import React from \"react\"\n\nconst ScrollSplit = ({\n  children,\n  buttonText,\n  buttonLink,\n  secondButtonText,\n  secondButtonLink,\n}) => {\n  const button = (buttonText && buttonLink) && (\n    <div className=\"featured-action\">\n      <a href={buttonLink}>\n        <button className=\"action-button\">{buttonText}</button>\n      </a>\n    </div>\n  ) || ''\n\n  const secondButton = (secondButtonText && secondButtonLink) && (\n    <div className=\"featured-second-action\">\n      <a href={secondButtonLink}>\n        <button className=\"second-action-button\">{secondButtonText}</button>\n      </a>\n    </div>\n  ) || ''\n\n  return (\n    <>\n      <div className=\"banner\">\n        <div className=\"banner-text\">\n          <div className=\"featured-area\">\n            <div className=\"featured-text\">\n              {children}\n            </div>\n            {button}\n            {secondButton}\n          </div>\n        </div>\n      </div>\n      <div className=\"mobile-header\">\n        {children}\n        {button}\n        {secondButton}\n      </div>\n    </>\n    \n  )\n}\n\nexport default ScrollSplit","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport BlogPreview from \"../components/blogPreview\"\nimport ScrollSplit from \"../components/scrollSplit\"\nimport { SEO } from \"./../components/seo\"\nimport { graphql, Link } from \"gatsby\"\nimport { absPathToUrl, formatDate } from \"../nifty\"\nimport * as styles from \"../components/postList.module.css\"\n\nconst BrainModelPage = ({ data }) => {\n  const topicNodes = data.topicNodes.nodes\n  const articleNodes = data.articleNodes.nodes\n  const researchNodes = data.researchNodes.nodes\n  const questNodes = data.questNodes.nodes\n  const banner = [\n    <h1 key=\"title\" id=\"_name1\" itemProp=\"name\">Artificial Intelligence</h1>,\n  ]\n  return (\n    <Layout\n      mainConf=\"fullscreen\"\n      title=\"AI\"\n      section=\"science\"\n      subsection=\"ai\"\n      bannerParagraph={banner}\n    >\n      <div className=\"centered\">\n        <div className=\"main-section\">\n          <h2>Main research</h2>\n          {researchNodes.map(node => (\n            <div key={node.id}>\n              {node.frontmatter.date}\n              <Link to={absPathToUrl(node.fileAbsolutePath)}>\n                <h3>\n                  {node.frontmatter.title}\n                </h3>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <ScrollSplit>\n        <h2>Big topics A-Z</h2>\n      </ScrollSplit>\n      <div className=\"centered\">\n        <div className=\"main-section\">\n          <div className={styles.blogcards}>\n            {topicNodes.map(node => (\n              <BlogPreview\n                key={node.id} \n                path={absPathToUrl(node.fileAbsolutePath)}\n                title={node.frontmatter.title}\n                text={node.excerpt}\n                readMore=\"Read more...\"\n                developing={node.frontmatter.developing}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      \n\n      <div className=\"centered\">\n        <div className=\"main-section\">\n          <h2>Additional research</h2>\n          <p>Side quests</p>\n          {questNodes.map(node => (\n            <div key={node.id}>\n              {node.frontmatter.date}\n              <Link to={absPathToUrl(node.fileAbsolutePath)}>\n                <h3>\n                  {node.frontmatter.title}\n                </h3>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <ScrollSplit>\n        <h2>Last reviews</h2>\n      </ScrollSplit>\n      <div className=\"centered\">\n        <div className=\"main-section\">\n          <p>\n            All reviews <Link to=\"/ai/reviews\">here</Link>\n          </p>\n\n          {articleNodes.map(node => {\n            return (\n              <div key={node.id}>\n                <Link to={absPathToUrl(node.fileAbsolutePath)}>\n                  <h3>{node.frontmatter.title}</h3>\n                </Link>\n                <h4>{node.frontmatter.subtitle}</h4>\n                <p>({node.frontmatter.year}) - by {node.frontmatter.authors}</p>\n              </div>\n            )})\n          }\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BrainModelPage\n\nexport const query = graphql`\n  query AIQuery {\n    researchNodes: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/markdown\\/ai\\//\"},\n        frontmatter: {article: {eq: \"main\"}}\n      }\n      sort: {frontmatter: { date: ASC}}\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n        excerpt\n        fileAbsolutePath\n        id\n      }\n    }\n    questNodes: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/markdown\\/ai\\//\"},\n        frontmatter: {article: {eq: \"quest\"}}\n      }\n      sort: {frontmatter: { date: ASC}}\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n        excerpt\n        fileAbsolutePath\n        id\n      }\n    }\n    topicNodes: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/markdown\\/ai\\//\"},\n        frontmatter: {topic: {eq: true}}\n      }\n      sort: {fileAbsolutePath: ASC}\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n        excerpt\n        fileAbsolutePath\n        id\n      }\n    }\n    articleNodes: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/markdown\\/ai\\/reviews\\//\"},\n      }\n      sort: {frontmatter: {published: DESC}}\n    ) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          subtitle\n          year\n          authors\n        }\n        fileAbsolutePath\n        id\n      }\n    }\n  }\n`\n\nexport const Head = ({ location, data, pageContext }) => (\n  <SEO \n    path={location.pathname}\n    data={data}\n    frontmatter={data?.markdownRemark?.frontmatter}\n    pageContext={pageContext}\n    title=\"AI\"\n  >\n\n  </SEO>\n)","// extracted by mini-css-extract-plugin\nexport var blogcards = \"postList-module--blogcards--6d61a\";"],"names":["_React$Component","LayoutBase","props","_this","call","errorCallback","bind","menuClicked","closeCallback","closeMenu","searchClicked","state","menuOpen","searchOpen","errorMessage","_inheritsLoose","_proto","prototype","this","setState","openMenu","render","children","title","published","publishedText","lastUpdated","updatedText","section","subsection","buttonText","buttonLink","secondButtonText","secondButtonLink","featuredImage","bannerParagraph","mainConf","languageName","imageData","getImage","wideImage","getSrc","React","FeaturedImage","image","banner","Banner","header","Header","language","menuClickedCallback","searchClickedCallback","fullscreenMenu","MenuPopup","fullPage","className","Search","MainBase","Object","assign","Footer","Layout","LayoutNavigation","_ref","button","href","secondButton","data","topicNodes","nodes","articleNodes","researchNodes","questNodes","key","id","itemProp","map","node","frontmatter","date","Link","to","absPathToUrl","fileAbsolutePath","ScrollSplit","styles","BlogPreview","path","text","excerpt","readMore","developing","subtitle","year","authors","Head","_ref2","_data$markdownRemark","location","pageContext","SEO","pathname","markdownRemark","blogcards"],"sourceRoot":""}