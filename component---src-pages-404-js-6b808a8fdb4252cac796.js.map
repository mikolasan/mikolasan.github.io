{"version":3,"file":"component---src-pages-404-js-6b808a8fdb4252cac796.js","mappings":"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","sources":["webpack://gatsby-mikolasan-blog/./src/components/layoutBase.js","webpack://gatsby-mikolasan-blog/./src/components/layout.js","webpack://gatsby-mikolasan-blog/./src/components/snake/game.js","webpack://gatsby-mikolasan-blog/./src/components/snake.js","webpack://gatsby-mikolasan-blog/./src/components/snake.module.css","webpack://gatsby-mikolasan-blog/./src/pages/404.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getImage, getSrc } from \"gatsby-plugin-image\"\n\nimport Banner from \"../components/banner\"\nimport FeaturedImage from \"../components/featuredImage\"\nimport MainBase from \"./mainBase\"\nimport MenuPopup from \"./menuPopup\"\nimport Footer from \"./footerBase\"\nimport Header from \"./header\"\nimport Search from \"./allPagesSearch\"\n\nclass LayoutBase extends React.Component {\n  constructor(props) {\n    super(props)\n    this.errorCallback = this.errorCallback.bind(this)\n    this.menuClicked = this.menuClicked.bind(this)\n    this.closeCallback = this.closeMenu.bind(this)\n    this.searchClicked = this.searchClicked.bind(this)\n    this.state = {\n      menuOpen: false,\n      searchOpen: false,\n      errorMessage: \"\"\n    }\n  }\n\n  errorCallback(errorMessage) {\n    this.setState({\n      errorMessage: errorMessage\n    })\n  }\n  \n  menuClicked() {\n    this.setState({\n      menuOpen: !this.state.menuOpen,\n      searchOpen: false\n    })\n  }\n\n  openMenu() {\n    this.setState({ menuOpen: true })\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false })\n  }\n\n  searchClicked() {\n    if (this.state.menuOpen) return\n\n    this.setState({ searchOpen: !this.state.searchOpen})\n  }\n\n  render() {\n    const {\n      children,\n      title,\n      published,\n      publishedText,\n      lastUpdated,\n      updatedText,\n      section,\n      subsection,\n      buttonText,\n      buttonLink,\n      secondButtonText,\n      secondButtonLink,\n      featuredImage,\n      bannerParagraph,\n      mainConf,\n      languageName\n    } = this.props\n    \n    const imageData = getImage(featuredImage);\n    const imageSrc = getSrc(featuredImage);\n\n    const wideImage = (\n      <FeaturedImage\n        image={imageData}\n        title={title}\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        lastUpdated={lastUpdated}\n      >\n        {bannerParagraph}\n      </FeaturedImage>\n    )\n\n    const banner = bannerParagraph && (\n      <Banner\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        publishedText={publishedText}\n        lastUpdated={lastUpdated}\n        updatedText={updatedText}\n      >\n        {bannerParagraph}\n      </Banner>\n    ) || ``\n\n    const header = (\n      <Header\n        section={section}\n        subsection={subsection}\n        language={languageName}\n        menuOpen={this.state.menuOpen}\n        menuClickedCallback={this.menuClicked}\n        searchOpen={this.state.searchOpen}\n        searchClickedCallback={this.searchClicked}\n      />\n    )\n\n    const fullscreenMenu = (\n      <>\n        {header}\n        <MenuPopup\n          language={languageName}\n          closeCallback={this.closeCallback}\n        />\n      </>\n    )\n\n    const fullPage = (\n      <div className={\"language-\" + languageName}>\n        {header}\n        {this.state.searchOpen && (\n          <div className=\"searchline\">\n            <Search />\n          </div>\n        )}\n        {featuredImage && wideImage || banner}\n        <MainBase\n          mainConf={mainConf}\n          errorCallback={this.errorCallback}\n          errorMessage={this.state.errorMessage}\n          {...this.props}\n        >\n          {children}\n        </MainBase>\n        <Footer language={languageName} />\n      </div>\n    )\n\n    const isMenuOpen = this.state.menuOpen\n    const currentLayout = isMenuOpen && fullscreenMenu || fullPage\n    return currentLayout\n  }\n}\n\nLayoutBase.propTypes = {\n  children: PropTypes.node.isRequired,\n  languageName: PropTypes.string.isRequired,\n  publishedText: PropTypes.string.isRequired,\n  updatedText: PropTypes.string.isRequired,\n}\n\nexport default LayoutBase\n","import React from \"react\"\nimport LayoutBase from \"./layoutBase\"\nimport LayoutNavigation from \"./layoutNavigation\"\n\nexport default function Layout(props) {\n  switch (props.mainConf) {\n  case \"navigation\":\n    return (\n      <LayoutNavigation\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  default:\n    return (\n      <LayoutBase\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  }\n}","let world = [];\nlet snake = [];\nconst DIRECTION = {\n  UP: 1,\n  DOWN: 2,\n  LEFT: 3,\n  RIGHT: 4,\n};\nlet direction;\nconst speed = 200;\n\nconst roads = {};\nlet grass;\nlet ground;\nlet tree;\n\nlet width;\nlet height;\nlet last_timestamp = 0;\nlet movementDelay = 0;\n\nfunction draw(ctx, timestamp) {\n  const dt = timestamp - last_timestamp;\n  last_timestamp = timestamp;\n  // console.log(dt);\n\n  movementDelay += dt;\n  if (movementDelay >= speed) {\n    move();\n    movementDelay = 0;\n  }\n  ctx.fillStyle = '#fff'; // background color\n  ctx.fillRect(0, 0, width, height);\n  // TODO: replace these numbers with real isometric math\n  const tileXSize = 45;\n  const tileYSize = 25;\n  const tileHShift = 44;\n  const tileLVShift = 40;\n  const tileRVShift = 26;\n  for (let i = 0; i < world.length; ++i) {\n    for (let j = 0; j < world[i].length; ++j) {\n      let snakePart = false;\n      for (let k = 0; k < snake.length; ++k) {\n        const c = snake[k];\n        if (c[0] === i && c[1] === j) {\n          snakePart = true;\n          break;\n        }\n      }\n      ctx.drawImage(snakePart ? ground : grass,\n        world.length * tileLVShift - j * tileHShift + i * tileXSize,\n        j * tileYSize + i * tileRVShift);\n      \n      if (world[i][j] === 1) {\n        ctx.drawImage(tree,\n          world.length * tileLVShift - j * tileHShift + i * tileXSize + 20,\n          j * tileYSize + i * tileRVShift - 37);\n      }\n    }\n  }\n\n  const drawWrapper = t => draw(ctx, t);\n  window.requestAnimationFrame(drawWrapper);\n}\n\n//Function to get the mouse position\nfunction getMousePos(canvas, event) {\n  return {\n    x: event.offsetX,\n    y: event.offsetY\n  };\n}\n\nfunction move() {\n  const head = [...snake[snake.length - 1]];\n\n  if (direction == DIRECTION.UP) {\n    head[1] = head[1] - 1;\n  } else if (direction == DIRECTION.DOWN) {\n    head[1] = head[1] + 1;\n  } else if (direction == DIRECTION.LEFT) {\n    head[0] = head[0] - 1;\n  } else if (direction == DIRECTION.RIGHT) {\n    head[0] = head[0] + 1;\n  }\n  \n  if (head[0] < 0 || head[1] < 0 || head[0] >= world.length || head[1] >= world[head[0]].length) {\n    resetGame();\n    return;\n  }\n\n  for (let i = 0; i < snake.length; ++i) {\n    if (snake[i][0] === head[0] && snake[i][1] === head[1]) {\n      resetGame();\n      return;\n    }\n  }\n\n  if (world[head[0]][head[1]] === 1) {\n    spawnApple();\n    world[head[0]][head[1]] = 0;\n  } else {\n    snake = snake.slice(1);\n  }\n  snake.push(head);\n}\n\nfunction onKeyDown(event) {\n  if (event.key === 'ArrowUp') {\n    event.preventDefault();\n    if (direction == DIRECTION.DOWN) {\n      return;\n    }\n    direction = DIRECTION.UP;\n  }\n  else if (event.key === 'ArrowDown') {\n    event.preventDefault();\n    if (direction == DIRECTION.UP) {\n      return;\n    }\n    direction = DIRECTION.DOWN;\n  }\n  else if (event.key == 'ArrowLeft') {\n    event.preventDefault();\n    if (direction == DIRECTION.RIGHT) {\n      return;\n    }\n    direction = DIRECTION.LEFT;\n  }\n  else if (event.key == 'ArrowRight') {\n    event.preventDefault();\n    if (direction == DIRECTION.LEFT) {\n      return;\n    }\n    direction = DIRECTION.RIGHT;\n  }\n}\n\nfunction setUpCanvas(canvas) {\n  // const { clientWidth, clientHeight } = canvas.getBoundingClientRect();\n  const ratio = 10/7;\n  canvas.width = canvas.clientWidth;\n  // canvas.height = canvas.clientHeight;\n  canvas.height = canvas.width / ratio\n  width = canvas.width;\n  height = canvas.height;\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction spawnApple() {\n  while (true) {\n    const x = getRandomInt(0, 10);\n    const y = getRandomInt(0, 10);\n    if (world[x][y] === 1) {\n      // do not collide with existing apple\n      continue;\n    }\n    let inSnake = false;\n    for (let i = 0; i < snake.length; ++i) {\n      if (snake[i][0] === x && snake[i][1] === y) {\n        inSnake = true;\n        break;\n      }\n    }\n    if (!inSnake) {\n      world[x][y] = 1;\n      console.log(`tree on ${x} ${y}`);\n      break;\n    }\n  }\n}\n\nfunction resetGame() {\n  world = [];\n  const worldSize = 10;\n  for (let i = 0; i < worldSize; ++i) {\n    const line = [];\n    for (let j = 0; j < worldSize; ++j) {\n      line.push(0);\n    }\n    world.push(line);\n  }\n  \n  snake = [[0,0], [0,1], [0,2]];\n  direction = DIRECTION.DOWN;\n  spawnApple();\n}\n\nfunction initGame() {\n\n  resetGame();\n  const canvas = document.getElementById('snake');\n  if (!canvas) {\n    console.error('no canvas')\n    return;\n  }\n\n  for (let i = 0; i < 15; ++ i) {\n    const img = new Image();\n    img.src = `/images/snake/road(${i + 1}).png`;\n    roads[`${i}`] = img;\n  }\n  grass = new Image();\n  grass.src = '/images/snake/grass.png';\n\n  ground = new Image();\n  ground.src = '/images/snake/ground.png';\n\n  tree = new Image();\n  tree.src = '/images/snake/tree(1).png';\n\n  canvas.addEventListener('mousemove', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n  }, false);\n  canvas.addEventListener('mousedown', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n  }, false);\n  canvas.addEventListener('mouseup', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n  }, false);\n  canvas.addEventListener('click', function(evt) {\n    const mousePos = getMousePos(canvas, evt);\n  }, false);\n  canvas.addEventListener('keydown', event => {\n    onKeyDown(event);\n  }, false);\n\n  if (!canvas.getContext) {\n    console.error('canvas without context')\n    return;\n  }\n\n  const ctx = canvas.getContext('2d');\n  \n  setUpCanvas(canvas);\n  \n  window.addEventListener('resize', () => {\n    console.log('resize');\n    // Clear the canvas.\n    ctx.clearRect(0, 0, ctx.width, ctx.height);\n    // Draw it all again.\n    setUpCanvas(canvas);\n    last_timestamp = 0;\n    draw(ctx, 0);\n  });\n\n  const drawWrapper = timestamp => draw(ctx, timestamp);\n  window.requestAnimationFrame(drawWrapper);\n\n  \n}\n\nexport { initGame };","import React from \"react\"\nimport { initGame } from \"./snake/game\"\nimport * as styles from \"./snake.module.css\"\n\nclass Snake extends React.Component {\n  componentDidMount() {\n    initGame()\n  }\n\n  render() {\n    return (\n      <>\n        <canvas id=\"snake\" className={styles.snake} tabIndex=\"0\"></canvas>\n        <p>\n          Tileset: <a href=\"https://artyom-zagorskiy.itch.io/isometric-medieval-pack\" target=\"_blank\" rel=\"external nofollow noopener noreferrer\">\n            Isometric Medieval Pack</a> by Artyom Zagorskiy.\n        </p>\n        <hr />\n      </>\n    )\n  }\n}\n\nexport default Snake","// extracted by mini-css-extract-plugin\nexport var snake = \"snake-module--snake--ac013\";","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql, Link } from \"gatsby\"\nimport Snake from \"../components/snake\"\nimport { absPathToUrl, removeHtmlExtension } from \"../nifty\"\nimport { SEO } from \"../components/seo\"\n\nconst NotFoundPage = ({ data }) => {\n  const edges = data.allMarkdownRemark.edges\n  const slugs = edges.map(e => absPathToUrl(e.node.fileAbsolutePath))\n  const sections = new Map()\n  const ruSections = new Map()\n  slugs.forEach(path => {\n    const regex = /\\/([a-z\\-]+)\\/.*/i\n    const ruRegex = /\\/ru\\/([a-z\\-]+)\\/.*/i\n    const match = regex.exec(path)\n    const ruMatch = ruRegex.exec(path)\n    if (ruMatch !== null && ruMatch[1] !== undefined) {\n      const sectioName = ruMatch[1]\n      if (ruSections.has(sectioName)) {\n        ruSections.get(sectioName).unshift(path)\n      } else {\n        ruSections.set(sectioName, [path])\n      }\n    } else if (match !== null && match[1] !== undefined && match[1] !== \"ru\") {\n      const sectioName = match[1]\n      if (sections.has(sectioName)) {\n        sections.get(sectioName).push(path)\n      } else {\n        sections.set(sectioName, [path])\n      }\n    }\n  })\n\n  return (\n    <Layout \n      title=\"404\"\n      bannerParagraph={[<h1 key=\"1\">404 - Not Found</h1>]}\n    >\n      <p>Oops. The page you are looking for ... got lost.</p>\n      <p>So, first, DON'T PANIC</p>\n      <ul>\n        <ol>You can use local search from the top navigation bar.</ol>\n        <ol>Or enjoy my isometric implementation of a snake game</ol>\n      </ul>\n\n      <Snake />\n\n      <p>But here are all sections of this website. I hope at least this can help</p>\n      {Array.from(sections.keys()).map(key => {\n        return (\n          <details key={key}>\n            <summary>\n              <h2>▸ {key.replaceAll(\"-\", \" \")}</h2>\n            </summary>\n            <ul>\n              {sections.get(key).map(path => {\n                let title = \"---\"\n                const edge = edges.find(e => absPathToUrl(e.node.fileAbsolutePath) === path)\n                if (edge === undefined) {\n                  return ``\n                } else {\n                  title = edge.node.frontmatter.title\n                  return <li key={path}>\n                    <Link to={path}>{title}</Link>\n                  </li>\n                }\n              })}\n            </ul>\n          </details>\n        )\n      })}\n\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const query = graphql`\n  query AllNavigationQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({ location, data, pageContext }) => (\n  <SEO \n    path={location.pathname}\n    data={data}\n    frontmatter={data?.markdownRemark?.frontmatter}\n    pageContext={pageContext}\n    title=\"404\"\n  >\n\n  </SEO>\n)"],"names":["_React$Component","LayoutBase","props","_this","call","errorCallback","bind","menuClicked","closeCallback","closeMenu","searchClicked","state","menuOpen","searchOpen","errorMessage","_inheritsLoose","_proto","prototype","this","setState","openMenu","render","children","title","published","publishedText","lastUpdated","updatedText","section","subsection","buttonText","buttonLink","secondButtonText","secondButtonLink","featuredImage","bannerParagraph","mainConf","languageName","imageData","getImage","wideImage","getSrc","React","FeaturedImage","image","banner","Banner","header","Header","language","menuClickedCallback","searchClickedCallback","fullscreenMenu","MenuPopup","fullPage","className","Search","MainBase","Object","assign","Footer","Layout","LayoutNavigation","world","snake","DIRECTION","direction","roads","grass","ground","tree","width","height","last_timestamp","movementDelay","draw","ctx","timestamp","dt","head","_toConsumableArray","length","resetGame","i","spawnApple","slice","push","move","fillStyle","fillRect","j","snakePart","k","c","drawImage","window","requestAnimationFrame","t","getMousePos","canvas","event","x","offsetX","y","offsetY","setUpCanvas","clientWidth","getRandomInt","min","max","Math","ceil","floor","random","inSnake","console","log","line","initGame","document","getElementById","error","img","Image","src","addEventListener","evt","key","preventDefault","onKeyDown","getContext","clearRect","Snake","apply","arguments","componentDidMount","id","tabIndex","href","target","rel","_ref","data","edges","allMarkdownRemark","slugs","map","e","absPathToUrl","node","fileAbsolutePath","sections","Map","ruSections","forEach","path","match","exec","ruMatch","undefined","sectioName","has","get","unshift","set","Array","from","keys","replaceAll","edge","find","frontmatter","Link","to","Head","_ref2","_data$markdownRemark","location","pageContext","SEO","pathname","markdownRemark"],"sourceRoot":""}