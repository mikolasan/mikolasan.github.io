{"version":3,"file":"component---src-templates-code-list-template-js-15a58976c56a5e9606b9.js","mappings":"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","sources":["webpack://gatsby-mikolasan-blog/./src/components/layoutBase.js","webpack://gatsby-mikolasan-blog/./src/components/layout.js","webpack://gatsby-mikolasan-blog/./src/components/pagination.module.css","webpack://gatsby-mikolasan-blog/./src/components/pagination.js","webpack://gatsby-mikolasan-blog/./src/components/postList.js","webpack://gatsby-mikolasan-blog/./src/components/sectionCard.js","webpack://gatsby-mikolasan-blog/./src/templates/codeListTemplate.js","webpack://gatsby-mikolasan-blog/./src/components/postList.module.css"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getImage, getSrc } from \"gatsby-plugin-image\"\n\nimport Banner from \"../components/banner\"\nimport FeaturedImage from \"../components/featuredImage\"\nimport MainBase from \"./mainBase\"\nimport MenuPopup from \"./menuPopup\"\nimport Footer from \"./footerBase\"\nimport Header from \"./header\"\nimport Search from \"./allPagesSearch\"\n\nclass LayoutBase extends React.Component {\n  constructor(props) {\n    super(props)\n    this.errorCallback = this.errorCallback.bind(this)\n    this.menuClicked = this.menuClicked.bind(this)\n    this.closeCallback = this.closeMenu.bind(this)\n    this.searchClicked = this.searchClicked.bind(this)\n    this.state = {\n      menuOpen: false,\n      searchOpen: false,\n      errorMessage: \"\"\n    }\n  }\n\n  errorCallback(errorMessage) {\n    this.setState({\n      errorMessage: errorMessage\n    })\n  }\n  \n  menuClicked() {\n    this.setState({\n      menuOpen: !this.state.menuOpen,\n      searchOpen: false\n    })\n  }\n\n  openMenu() {\n    this.setState({ menuOpen: true })\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false })\n  }\n\n  searchClicked() {\n    if (this.state.menuOpen) return\n\n    this.setState({ searchOpen: !this.state.searchOpen})\n  }\n\n  render() {\n    const {\n      children,\n      title,\n      published,\n      publishedText,\n      lastUpdated,\n      updatedText,\n      section,\n      subsection,\n      buttonText,\n      buttonLink,\n      secondButtonText,\n      secondButtonLink,\n      featuredImage,\n      bannerParagraph,\n      mainConf,\n      languageName\n    } = this.props\n    \n    const imageData = getImage(featuredImage);\n    const imageSrc = getSrc(featuredImage);\n\n    const wideImage = (\n      <FeaturedImage\n        image={imageData}\n        title={title}\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        lastUpdated={lastUpdated}\n      >\n        {bannerParagraph}\n      </FeaturedImage>\n    )\n\n    const banner = bannerParagraph && (\n      <Banner\n        buttonText={buttonText}\n        buttonLink={buttonLink}\n        secondButtonText={secondButtonText}\n        secondButtonLink={secondButtonLink}\n        published={published}\n        publishedText={publishedText}\n        lastUpdated={lastUpdated}\n        updatedText={updatedText}\n      >\n        {bannerParagraph}\n      </Banner>\n    ) || ``\n\n    const header = (\n      <Header\n        section={section}\n        subsection={subsection}\n        language={languageName}\n        menuOpen={this.state.menuOpen}\n        menuClickedCallback={this.menuClicked}\n        searchOpen={this.state.searchOpen}\n        searchClickedCallback={this.searchClicked}\n      />\n    )\n\n    const fullscreenMenu = (\n      <>\n        {header}\n        <MenuPopup\n          language={languageName}\n          closeCallback={this.closeCallback}\n        />\n      </>\n    )\n\n    const fullPage = (\n      <div className={\"language-\" + languageName}>\n        {header}\n        {this.state.searchOpen && (\n          <div className=\"searchline\">\n            <Search />\n          </div>\n        )}\n        {featuredImage && wideImage || banner}\n        <MainBase\n          mainConf={mainConf}\n          errorCallback={this.errorCallback}\n          errorMessage={this.state.errorMessage}\n          {...this.props}\n        >\n          {children}\n        </MainBase>\n        <Footer language={languageName} />\n      </div>\n    )\n\n    const isMenuOpen = this.state.menuOpen\n    const currentLayout = isMenuOpen && fullscreenMenu || fullPage\n    return currentLayout\n  }\n}\n\nLayoutBase.propTypes = {\n  children: PropTypes.node.isRequired,\n  languageName: PropTypes.string.isRequired,\n  publishedText: PropTypes.string.isRequired,\n  updatedText: PropTypes.string.isRequired,\n}\n\nexport default LayoutBase\n","import React from \"react\"\nimport LayoutBase from \"./layoutBase\"\nimport LayoutNavigation from \"./layoutNavigation\"\n\nexport default function Layout(props) {\n  switch (props.mainConf) {\n  case \"navigation\":\n    return (\n      <LayoutNavigation\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  default:\n    return (\n      <LayoutBase\n        {...props}\n        languageName=\"en\"\n        publishedText=\"Published: \"\n        updatedText=\"Updated: \"\n      />\n    )\n  }\n}","// extracted by mini-css-extract-plugin\nexport var blognavigation = \"pagination-module--blognavigation--5ecfa\";\nexport var currentpage = \"pagination-module--currentpage--5e08e\";\nexport var nextpage = \"pagination-module--nextpage--24d26\";\nexport var numberpage = \"pagination-module--numberpage--d930b\";\nexport var prevpage = \"pagination-module--prevpage--73432\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as styles from \"./pagination.module.css\"\n\nconst Pagination = ({ prevPageText, nextPageText, currentPage, numPages, path }) => {\n  \n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? '' : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n  \n  return (\n    <ul className={styles.blognavigation}>\n      <li key=\"prev\" className={styles.prevpage}>\n        {!isFirst && (\n          <Link className={styles.prevpage} to={`${path}/${prevPage}`} rel=\"prev\">\n            {prevPageText}\n          </Link>\n        ) || <span>{prevPageText}</span>}\n      </li>\n      {Array.from({ length: numPages }, (_, i) => (\n        <li\n          key={`pagination-number${i + 1}`}\n          className={i + 1 === currentPage ? styles.currentpage : styles.numberpage}\n        >\n          <Link to={`${path}/${i === 0 ? '' : i + 1}`}>\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      <li key=\"next\" className={styles.nextpage}>\n        {!isLast && (\n          <Link to={`${path}/${nextPage}`} rel=\"next\">\n            {nextPageText}\n          </Link>\n        ) || <span>{nextPageText}</span>}\n      </li>\n    </ul>\n  )\n}\n\nexport default Pagination","import React from \"react\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport BlogPreview from \"./blogPreview\"\nimport Pagination from \"./pagination\"\nimport { absPathToUrl, formatDate } from \"../nifty\"\nimport * as styles from \"./postList.module.css\"\n\nconst PostList = ({ pageContext, posts, baseUrl }) => {\n  const {\n    currentPage,\n    numPages\n  } = pageContext\n  return (\n    <>\n      <div className={styles.blogcards}>\n        {posts.map(({ node }) => (\n          <BlogPreview\n            key={node.id} \n            path={absPathToUrl(node.fileAbsolutePath)}\n            title={node.frontmatter.title}\n            text={node.excerpt}\n            date={formatDate(node.frontmatter.date)}\n            readMore=\"Read more...\"\n            image={getImage(node.frontmatter.previewImage)}\n            altImage=\"Some alt text for this picture\"\n            developing={node.frontmatter.developing}\n            tags={node.frontmatter.tags}\n          />\n        ))}\n      </div>\n      <Pagination\n        prevPageText=\"← Previous Page\"\n        nextPageText=\"Next Page →\"\n        currentPage={currentPage}\n        numPages={numPages}\n        path={baseUrl}\n      />\n    </>\n  )\n}\n\nexport default PostList\n","import React from \"react\";\nimport { Link } from \"gatsby\"\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\"\n\nconst SectionCard = ({ children, className, image, altImageText, title, url }) => (\n  <div className={`ideacard ${className}`}>\n    {image && (\n      <Link to={url}>\n        <GatsbyImage\n          image={getImage(image)}\n          alt={altImageText}\n          placeholder=\"blurred\"\n          layout=\"constrained\"\n          transformOptions={{\n            cropFocus: \"attention\",\n            fit: \"cover\",\n          }}\n          quality={60}\n        />\n      </Link>\n    )}\n    <div className=\"idea-card-container\">\n      <Link to={url}>\n        <h3>{title}</h3>\n      </Link>\n      {children}\n      {/* <p>\n        <Link to={url}>Read more</Link>\n      </p> */}\n    </div>\n  </div>\n);\n\nexport default SectionCard;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport PostList from \"../components/postList\"\nimport SectionCard from \"../components/sectionCard\"\nimport { SEO } from \"../components/seo\"\n\nconst Code = ({ data, pageContext }) => (\n  <Layout\n    mainConf=\"list\"\n    title={pageContext.title}\n    section=\"code\"\n    bannerParagraph={pageContext.currentPage > 1 ? [\n      <h1 key=\"title\" id=\"_name1\" itemProp=\"name\">Coding</h1>,\n    ] : undefined}\n  >\n    {pageContext.currentPage === 1 && (\n    <>\n      <div className=\"ideacards\">\n        <SectionCard\n          title=\"Linux\"\n          url=\"/linux\"\n        >\n          <p>\n            Custom linux development, carefully crafted commands and bash-fu\n          </p>\n        </SectionCard>\n\n        <SectionCard\n          title=\"C++\"\n          url=\"/code/cpp\"\n        >\n          <p>\n          My collection of C++ language snippets\n          </p>\n        </SectionCard>\n\n        <SectionCard\n          title=\"Gamedev\"\n          url=\"/gamedev\"\n        >\n          <p>\n          My game jam notes and other more serious endeavors in game development\n          </p>\n        </SectionCard>\n\n        <SectionCard\n          title=\"Projects\"\n          url=\"/projects\"\n        >\n          <p>\n          Professional efforts in developing and publishing free and open source products\n          </p>\n        </SectionCard>\n\n        <SectionCard\n          title=\"Ideas\"\n          url=\"/ideas\"\n        >\n          <p>\n          Concepts sitting on the backburner that my ADHD brain keeps spitting out\n          </p>\n        </SectionCard>\n      </div>\n      <div className=\"list-name\">\n        <h1 key=\"title\" id=\"_name1\" itemProp=\"name\">Coding</h1>\n      </div>\n    </>) || ``}\n    <PostList\n      posts={data.allMarkdownRemark.edges}\n      baseUrl=\"/code\"\n      pageContext={pageContext}\n    />\n  </Layout>\n)\n\nexport default Code\n\nexport const query = graphql`\n  query CodeListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      limit: $limit,\n      skip: $skip,\n      sort: { frontmatter: {lastModified: DESC}},\n      filter: { fileAbsolutePath: { regex: \"/markdown\\/code\\/(?!cpp)/\"} }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            developing\n            previewImage {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH,\n                  breakpoints: [278],\n                  transformOptions: {\n                    cropFocus: ATTENTION,\n                    fit: COVER\n                  },\n                  quality: 70\n                )\n              }\n            }\n          }\n          excerpt\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({ location, data, pageContext }) => (\n  <SEO \n    path={location.pathname}\n    data={data}\n    frontmatter={data?.markdownRemark?.frontmatter}\n    pageContext={pageContext}\n  >\n\n  </SEO>\n)","// extracted by mini-css-extract-plugin\nexport var blogcards = \"postList-module--blogcards--6d61a\";"],"names":["_React$Component","LayoutBase","props","_this","call","errorCallback","bind","menuClicked","closeCallback","closeMenu","searchClicked","state","menuOpen","searchOpen","errorMessage","_inheritsLoose","_proto","prototype","this","setState","openMenu","render","children","title","published","publishedText","lastUpdated","updatedText","section","subsection","buttonText","buttonLink","secondButtonText","secondButtonLink","featuredImage","bannerParagraph","mainConf","languageName","imageData","getImage","wideImage","getSrc","React","FeaturedImage","image","banner","Banner","header","Header","language","menuClickedCallback","searchClickedCallback","fullscreenMenu","MenuPopup","fullPage","className","Search","MainBase","Object","assign","Footer","Layout","LayoutNavigation","prevpage","_ref","prevPageText","nextPageText","currentPage","numPages","path","isFirst","isLast","prevPage","toString","nextPage","key","styles","Link","to","rel","Array","from","length","_","i","pageContext","posts","baseUrl","map","_ref2","node","BlogPreview","id","absPathToUrl","fileAbsolutePath","frontmatter","text","excerpt","date","formatDate","readMore","previewImage","altImage","developing","tags","Pagination","altImageText","url","GatsbyImage","alt","placeholder","layout","transformOptions","cropFocus","fit","quality","data","itemProp","undefined","SectionCard","PostList","allMarkdownRemark","edges","Head","_data$markdownRemark","location","SEO","pathname","markdownRemark","blogcards"],"sourceRoot":""}